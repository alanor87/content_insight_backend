{"version":3,"file":"static/js/Cabinet.4dc89132.chunk.js","mappings":"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","sources":["views/Cabinet/Billing/Billing.tsx","webpack://content_insight_frontend/./src/components/ProjectTile/ProjectTile.module.scss?4035","components/ProjectTile/ProjectTile.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectsList/ProjectsList.module.scss?29ea","views/Cabinet/Projects/ProjectsList/ProjectsList.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectPage/ProjectPage.module.scss?bdf2","webpack://content_insight_frontend/./src/components/DemoWidget/DemoWidget.module.scss?51f3","components/DemoWidget/DemoWidget.tsx","views/Cabinet/Projects/ProjectPage/ProjectPage.tsx","views/Cabinet/Projects/Projects.module.scss","views/Cabinet/Projects/Projects.tsx","views/Cabinet/Settings/Settings.tsx","views/Cabinet/Stats/Stats.tsx","views/Cabinet/Cabinet.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useLocation, useRouteMatch } from \"react-router\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  EmbeddedCheckoutProvider,\r\n  EmbeddedCheckout,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { Route, Switch } from \"react-router\";\r\n\r\nimport store from \"@/MST/store\";\r\n\r\nimport styles from \"./Billing.module.scss\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51Nxd5pEafHQOYw4BGVCREVAXfGdqJ1waIwTd9TT9cWrP1dI8b9rkgaTV25WSRbVGzQFx9YcYDubV8WGF1Y0zNKYf00E2dA3E0t\"\r\n);\r\n\r\nconst CheckoutForm: React.FC = () => {\r\n  const { createSubscription } = store.user;\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Create a Checkout Session as soon as the page loads\r\n    createSubscription().then((secret) => setClientSecret(secret));\r\n  }, []);\r\n\r\n  const options = { clientSecret };\r\n\r\n  return (\r\n    <div id=\"checkout\">\r\n      {clientSecret && (\r\n        <EmbeddedCheckoutProvider stripe={stripePromise} options={options}>\r\n          <EmbeddedCheckout />\r\n        </EmbeddedCheckoutProvider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckoutResult: React.FC = () => {\r\n  const [sessionResult, setSessionResult] = useState();\r\n  const { retrievePaymentSession } = store.user;\r\n  const { search } = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      const urlParams = new URLSearchParams(search);\r\n      const session_id = urlParams.get(\"session_id\");\r\n      if (!session_id) return;\r\n      retrievePaymentSession(session_id).then(setSessionResult);\r\n    }\r\n  }, [search]);\r\n\r\n  return <div>{JSON.stringify(sessionResult)}</div>;\r\n};\r\n\r\nconst Billing: React.FC = () => {\r\n  let { path  } = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route exact path={path} component={CheckoutForm} />\r\n      <Route path={`${path}/checkoutResult`} component={CheckoutResult} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default observer(Billing);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectTile\":\"ProjectTile_projectTile__quj6f\",\"projectDetails\":\"ProjectTile_projectDetails__grJt9\",\"projectName\":\"ProjectTile_projectName__zn2aT\",\"projectURL\":\"ProjectTile_projectURL__QeNpF\",\"projectControls\":\"ProjectTile_projectControls__P+4YV\"};","import { UserProjectType } from \"@/MST/user\";\r\nimport { memo } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport Button from \"../elements/Button\";\r\nimport styles from \"./ProjectTile.module.scss\";\r\n\r\ntype Props = UserProjectType & { onDelete: (projectId: string) =>void };\r\n\r\nconst ProjectTile: React.FC<Props> = ({\r\n  _id,\r\n  projectName,\r\n  projectCreationDate,\r\n  projectURL,\r\n  onDelete,\r\n}) => {\r\n  const { url } = useRouteMatch();\r\n\r\n  const onDeleteClick = () => {\r\n    onDelete(_id || '');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectTile}>\r\n      <div className={styles.projectDetails}>\r\n        {\" \"}\r\n        <Link to={`${url}/${_id}`}>\r\n          <div className={styles.projectName}>{projectName}</div>\r\n          <div className={styles.projectURL}>URL: {projectURL}</div>\r\n          <div className={styles.projectURL}>\r\n            Created: {projectCreationDate}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectControls}>\r\n        <Button icon=\"icon_delete\" text={\"Delete project\"} onClick={onDeleteClick}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProjectTile);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectsContainer\":\"ProjectsList_projectsContainer__q0Cj8\",\"addProjectButton\":\"ProjectsList_addProjectButton__pAUz0\",\"projectTilesWrapper\":\"ProjectsList_projectTilesWrapper__BioBg\"};","import { observer } from \"mobx-react-lite\";\r\nimport { Button, Spinner} from \"@/components\";\r\nimport { ProjectTile } from \"@/components/ProjectTile\";\r\nimport store from \"@/MST/store\";\r\n\r\nimport styles from \"./ProjectsList.module.scss\";\r\n\r\nconst ProjectsList: React.FC = () => {\r\n  \r\n  const { userProjects } = store.user;\r\n  const { setModalType, setCurrentProjectId, isLoading } = store.interface;\r\n\r\n  const onCreateProjectClick = () => {\r\n    setModalType('projectCreate');\r\n  };\r\n\r\n  const onDeleteProjectClick = (projectId: string) => {\r\n    setCurrentProjectId(projectId);\r\n    setModalType('projectDelete');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectsContainer}>\r\n      <Button\r\n        icon=\"icon_plus\"\r\n        text={\"Add project\"}\r\n        className={styles.addProjectButton}\r\n        onClick={onCreateProjectClick}\r\n      />\r\n      <div className={styles.projectTilesWrapper}>\r\n        {userProjects.length\r\n          ? userProjects.map((project) => <ProjectTile key={project._id} {...project} onDelete={onDeleteProjectClick} />)\r\n          : \"You dont have any projects yet.\"}\r\n      </div>\r\n      \r\n      {isLoading ? <Spinner /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectsList);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectPageWrapper\":\"ProjectPage_projectPageWrapper__DfPKp\",\"projectPage\":\"ProjectPage_projectPage__gPfMH\",\"projectHeader\":\"ProjectPage_projectHeader__Npbm9\",\"projectPageSection\":\"ProjectPage_projectPageSection__BaH67\",\"sectionHeader\":\"ProjectPage_sectionHeader__8KMsL\",\"sectionContent\":\"ProjectPage_sectionContent__WjGjw\",\"widgetSettings\":\"ProjectPage_widgetSettings__huTlX\",\"widgetControls\":\"ProjectPage_widgetControls__K+gdZ\",\"color\":\"ProjectPage_color__rsOVr\",\"sourceURL\":\"ProjectPage_sourceURL__7Ep6N\",\"range\":\"ProjectPage_range__ZyIDn\",\"demoWidgetWrapper\":\"ProjectPage_demoWidgetWrapper__FsfhT\",\"knowledgeBase\":\"ProjectPage_knowledgeBase__pVuHl\",\"knowledgeBaseList\":\"ProjectPage_knowledgeBaseList__HxEv1\",\"knowledgeBaseUploadForm\":\"ProjectPage_knowledgeBaseUploadForm__k82B2\",\"filesList\":\"ProjectPage_filesList__qlSQN\",\"scriptCode\":\"ProjectPage_scriptCode__YCQon\",\"buttonsWrapper\":\"ProjectPage_buttonsWrapper__uchQ+\",\"dragndropMessage\":\"ProjectPage_dragndropMessage__cuePI\"};","// extracted by mini-css-extract-plugin\nexport default {\"clarify_bot_chat_popup\":\"DemoWidget_clarify_bot_chat_popup__tr2iz\",\"closed\":\"DemoWidget_closed__DloXd\",\"clarify_bot_header\":\"DemoWidget_clarify_bot_header__AFB4+\",\"clarify_bot_toggle_button\":\"DemoWidget_clarify_bot_toggle_button__3Uy9c\",\"clarify_bot_content\":\"DemoWidget_clarify_bot_content__PjVly\",\"clarify_bot_input_wrapper\":\"DemoWidget_clarify_bot_input_wrapper__qbBsJ\",\"clarify_bot_ask_button\":\"DemoWidget_clarify_bot_ask_button__rTXgY\"};","import { ChangeEvent, useState } from \"react\";\r\nimport store from \"@/MST/store\";\r\nimport Spinner from \"../elements/Spinner\";\r\nimport styles from \"./DemoWidget.module.scss\";\r\nimport axios from \"axios\";\r\n\r\ntype Props = {\r\n  settings: {\r\n    projectId: string;\r\n    widgetHeaderColor: string;\r\n    widgetBackgroundColor: string;\r\n    widgetBorderRadius: string;\r\n    widgetBorderColor: string;\r\n    widgetBorderWidth: string;\r\n  };\r\n};\r\n\r\nconst DemoWidget: React.FC<Props> = ({ settings }) => {\r\n  const {\r\n    projectId,\r\n    widgetHeaderColor,\r\n    widgetBackgroundColor,\r\n    widgetBorderRadius,\r\n    widgetBorderColor,\r\n    widgetBorderWidth,\r\n  } = settings;\r\n\r\n  const { pushNotification } = store.interface;\r\n  const { _id: userId } = store.user;\r\n\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onQueryInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setQuestion(event.target.value);\r\n  };\r\n\r\n  const onQueryButtonClick = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const { data } = await axios.post(\"/getCompletion\", {\r\n        userId,\r\n        projectId,\r\n        question,\r\n      });\r\n      setResponse(data.response);\r\n    } catch (e: any) {\r\n      pushNotification({\r\n        type: \"error\",\r\n        message: \"Error getting the responsse : \\n\" + e.message,\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onClearClick = () => {\r\n    setQuestion('');\r\n    setResponse('');\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.clarify_bot_chat_popup}\r\n      style={{\r\n        backgroundColor: widgetBackgroundColor,\r\n        borderRadius: widgetBorderRadius + \"px\",\r\n        borderColor: widgetBorderColor,\r\n        borderWidth: widgetBorderWidth + \"px\",\r\n      }}\r\n    >\r\n      <div\r\n        className={styles.clarify_bot_header}\r\n        style={{ backgroundColor: widgetHeaderColor }}\r\n      >\r\n        Help\r\n        <button\r\n          className={styles.clarify_bot_toggle_button}\r\n          title=\"open / close\"\r\n        >          _\r\n        </button>\r\n      </div>\r\n      <div className={styles.clarify_bot_content}>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <div className={styles.clarify_bot_input_wrapper}>\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" focusable=\"false\">\r\n                <circle\r\n                  cx=\"6\"\r\n                  cy=\"6\"\r\n                  r=\"5.5\"\r\n                  fill=\"none\"\r\n                  stroke=\"black\"\r\n                ></circle>\r\n                <path\r\n                  stroke=\"black\"\r\n                  strokeLinecap=\"round\"\r\n                  d=\"M15 15l-5-5\"\r\n                ></path>\r\n              </svg>\r\n              <input\r\n                onChange={onQueryInputChange}\r\n                value={question}\r\n                className={styles.clarify_bot_question_input}\r\n                placeholder=\"How can we help?\"\r\n              />\r\n              <button className={styles.clarify_bot_clear_button} onClick={onClearClick}>\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  focusable=\"false\"\r\n                >\r\n                  <path\r\n                    stroke=\"black\"\r\n                    strokeLinecap=\"round\"\r\n                    d=\"M3 13L13 3m0 10L3 3\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            {response ? (\r\n              <div className=\"clarify_bot_response_block\">{response}</div>\r\n            ) : (\r\n              <button\r\n                disabled={!question}\r\n                title=\"Send question request\"\r\n                className={styles.clarify_bot_ask_button}\r\n                onClick={onQueryButtonClick}\r\n              >\r\n                Ask!\r\n              </button>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoWidget;\r\n","import { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Spinner } from \"@/components\";\r\n\r\nimport store from \"@/MST/store\";\r\n\r\nimport { UserProjectType } from \"@/MST/user\";\r\n\r\nimport styles from \"./ProjectPage.module.scss\";\r\nimport { validateProjectName, validateURL } from \"@/utils/validators\";\r\nimport DemoWidget from \"@/components/DemoWidget\";\r\n\r\nconst ProjectPage: React.FC = () => {\r\n  const { id: projectId }: { id: string } = useParams();\r\n  const [currentProject, setCurrentProject] = useState<UserProjectType>();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [projectURL, setProjectURL] = useState(\"\");\r\n  const [widgetHeaderColor, setWidgetHeaderColor] = useState(\"\");\r\n  const [widgetBackgroundColor, setWidgetBackgroundColor] = useState(\"\");\r\n  const [widgetBorderRadius, setWidgetBorderRadius] = useState(\"0\");\r\n  const [widgetBorderColor, setWidgetBorderColor] = useState(\"\");\r\n  const [widgetBorderWidth, setWidgetBorderWidth] = useState(\"0\");\r\n  const [filesList, setFilesList] = useState<File[]>([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    user: {\r\n      _id: userId,\r\n      getProjectById,\r\n      saveProjectSettings,\r\n      ingestKnowledgeBase,\r\n    },\r\n    interface: {\r\n      isLoading,\r\n      spinnerMessage,\r\n      setSpinnerMessage,\r\n      pushNotification,\r\n      setIsLoading,\r\n      setCurrentProjectId,\r\n      setModalType,\r\n    },\r\n  } = store;\r\n\r\n  const project = getProjectById(projectId);\r\n\r\n  useEffect(() => {\r\n    if (!project) return;\r\n    const {\r\n      projectName,\r\n      projectURL,\r\n      widgetSettings: {\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n        widgetBorderRadius,\r\n      },\r\n    } = project;\r\n\r\n    setCurrentProject(project);\r\n    setProjectName(projectName || \"\");\r\n    setProjectURL(projectURL || \"\");\r\n    setWidgetHeaderColor(widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetBorderRadius || \"\");\r\n  }, [project]);\r\n\r\n  const getScriptCode = () => {\r\n    return `   <script\r\n    id=\"clarify_bot_widget\"\r\n    data-userId=\"${userId}\"\r\n    data-projectId=\"${projectId}\"\r\n    src=\"https://content-insight-backend-c244a3d2147a.herokuapp.com/widget/getWidget\"\r\n    data-backendURL=\"https://content-insight-backend-c244a3d2147a.herokuapp.com\"\r\n   ></script>`;\r\n  };\r\n\r\n  const copyScriptCode = () => {\r\n    window.navigator.clipboard.writeText(getScriptCode()).then(() =>\r\n      pushNotification({\r\n        type: \"info\",\r\n        message: \"Script copied to clipboard.\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onInputChange =\r\n    (type: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      switch (type) {\r\n        case \"projectName\": {\r\n          setProjectName(e.target.value);\r\n          break;\r\n        }\r\n        case \"projectURL\": {\r\n          setProjectURL(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetHeaderColor\": {\r\n          setWidgetHeaderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBackgroundColor\": {\r\n          setWidgetBackgroundColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderColor\": {\r\n          setWidgetBorderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderWidth\": {\r\n          setWidgetBorderWidth(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderRadius\": {\r\n          setWidgetBorderRadius(e.target.value);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const validateMetadata = () => {\r\n    if (!validateProjectName(projectName)) {\r\n      setError(\"projectNameError\");\r\n      return false;\r\n    }\r\n    if (!validateURL(projectURL)) {\r\n      setError(\"projectURLError\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSaveMetadataClick = async () => {\r\n    if (!validateMetadata()) return;\r\n    setError(\"\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      projectName,\r\n      projectURL,\r\n    };\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating project metadata...\");\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetMetadata = () => {\r\n    setProjectName(currentProject?.projectName || \"\");\r\n    setProjectURL(currentProject?.projectURL || \"\");\r\n  };\r\n\r\n  const onSaveWidgetSettingsClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating widget settings...\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      widgetSettings: {\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderRadius,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n      },\r\n    };\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetWidgetSettings = () => {\r\n    if (!currentProject) return;\r\n    const { widgetSettings } = currentProject;\r\n    setWidgetHeaderColor(widgetSettings?.widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetSettings?.widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetSettings?.widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetSettings?.widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetSettings?.widgetBorderRadius || \"\");\r\n  };\r\n\r\n  const handleFilesAdd = (e: any) => {\r\n    console.log(\"handleFilesAdd\");\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // defining if we added file through dialogue window - or drag'ndrop\r\n    try {\r\n      const files: FileList =\r\n        e.type === \"drop\" ? e.dataTransfer.files : e.target.files;\r\n      const newFilesList = [...filesList];\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        if (files[i].type !== \"text/plain\") continue;\r\n        newFilesList.push(files[i]);\r\n      }\r\n      setFilesList(newFilesList);\r\n    } catch (error: any) {\r\n      pushNotification({\r\n        type: \"error\",\r\n        message:\r\n          \"Error while loading files from local drive. \\n\" + error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIngestKBClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Ingesting knowledge base\");\r\n    const formData = new FormData();\r\n    filesList.forEach((file) => {\r\n      formData.append(\"dataFiles\", file);\r\n    });\r\n\r\n    formData.append(\"projectId\", currentProject?._id || \"\");\r\n    formData.append(\"projectName\", currentProject?.projectName || \"\");\r\n\r\n    await ingestKnowledgeBase(formData);\r\n    setFilesList([]);\r\n  };\r\n\r\n  const onDeleteKBClick = () => {\r\n    setCurrentProjectId(currentProject?._id || \"\");\r\n    setSpinnerMessage(\"Deleting knowledge base\");\r\n    setModalType(\"proejctKBDelete\");\r\n    setFilesList([]);\r\n  };\r\n\r\n  if (!currentProject) return <div>Project not found.</div>;\r\n\r\n  return (\r\n    <div className={styles.projectPageWrapper}>\r\n      <div className={styles.projectHeader}>\r\n        <h1>Project : {currentProject.projectName}</h1>{\" \"}\r\n        <Link\r\n          to={\"/cabinet/projects\"}\r\n          style={{ display: \"block\", width: \"fit-content\" }}\r\n        >\r\n          <Button icon=\"icon_arrow_left\" text={\"To projects list\"} />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectPage}>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Widget settings</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Discard\"}\r\n              icon={\"icon_close\"}\r\n              onClick={resetWidgetSettings}\r\n            />\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Save\"}\r\n              icon={\"icon_save\"}\r\n              onClick={onSaveWidgetSettingsClick}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.sectionContent + \" \" + styles.widgetSettings}>\r\n            <div className={styles.widgetControls}>\r\n              {\" \"}\r\n              <label className={styles.color}>\r\n                Header color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetHeaderColor}\r\n                  onChange={onInputChange(\"widgetHeaderColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.color}>\r\n                Background color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetBackgroundColor}\r\n                  onChange={onInputChange(\"widgetBackgroundColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.color}>\r\n                Border color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetBorderColor}\r\n                  onChange={onInputChange(\"widgetBorderColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.range}>\r\n                Border width, px\r\n                <input\r\n                  type=\"range\"\r\n                  min={0}\r\n                  max={6}\r\n                  value={widgetBorderWidth}\r\n                  onChange={onInputChange(\"widgetBorderWidth\")}\r\n                />\r\n              </label>\r\n              <label className={styles.range}>\r\n                Border radius, px\r\n                <input\r\n                  type=\"range\"\r\n                  min={0}\r\n                  max={30}\r\n                  value={widgetBorderRadius}\r\n                  onChange={onInputChange(\"widgetBorderRadius\")}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className={styles.demoWidgetWrapper}>\r\n              <DemoWidget\r\n                settings={{\r\n                  projectId,\r\n                  widgetHeaderColor,\r\n                  widgetBackgroundColor,\r\n                  widgetBorderRadius,\r\n                  widgetBorderColor,\r\n                  widgetBorderWidth,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Knowledge base</h2>\r\n            <div className={styles.buttonsWrapper}>\r\n              <Button\r\n                disabled={isLoading || !filesList.length}\r\n                text={\"Ingest\"}\r\n                icon={\"icon_edit\"}\r\n                onClick={onIngestKBClick}\r\n              />\r\n              <Button\r\n                disabled={\r\n                  isLoading || !currentProject?.projectIngestedData?.length\r\n                }\r\n                text={\"Delete\"}\r\n                icon={\"icon_delete\"}\r\n                onClick={onDeleteKBClick}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles.sectionContent + \" \" + styles.knowledgeBase}>\r\n            <div>\r\n              <label>List of knowledgebase files</label>\r\n              <div className={styles.knowledgeBaseList}>\r\n                <ul className={styles.filesList}>\r\n                  {currentProject?.projectIngestedData?.map(\r\n                    ({ fileName, size }) => (\r\n                      <li key={fileName}>\r\n                        <span>{fileName}</span>\r\n                        <span>\r\n                          {Number.parseFloat(size || \"\").toFixed(2)} kb\r\n                        </span>\r\n                      </li>\r\n                    )\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label>Ingest files</label>\r\n\r\n              <div\r\n                className={styles.knowledgeBaseUploadForm}\r\n                onDragOver={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <input\r\n                  title=\"files to upload\"\r\n                  type=\"file\"\r\n                  accept=\".txt\"\r\n                  multiple={true}\r\n                  onDragEnd={handleFilesAdd}\r\n                  onChange={handleFilesAdd}\r\n                />\r\n                {filesList?.length ? (\r\n                  <ul className={styles.filesList}>\r\n                    {Array.from(filesList).map(({ name, size }) => {\r\n                      return (\r\n                        <li key={name + size}>\r\n                          <span>{name}</span>\r\n                          <span>{size}</span>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                ) : (\r\n                  <div className={styles.dragndropMessage}>\r\n                    Drag'n'drop txt files or click the area for dialog window.\r\n                    Files are adding up to the ones that are already in\r\n                    knowledge base.\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>{\" \"}\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Metadata</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Discard\"}\r\n              icon={\"icon_close\"}\r\n              onClick={resetMetadata}\r\n            />\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Save\"}\r\n              icon={\"icon_save\"}\r\n              onClick={onSaveMetadataClick}\r\n            />\r\n          </div>\r\n          <div className={styles.sectionContent}>\r\n            <label>\r\n              Project name\r\n              <span className=\"hintText\">\r\n                leters, numbers, dashes are allowed\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                className={error === \"projectNameError\" ? \"error\" : \"\"}\r\n                placeholder={\"project-name\"}\r\n                value={projectName}\r\n                onChange={onInputChange(\"projectName\")}\r\n              />\r\n            </label>\r\n            <label>\r\n              Project URL for the widget usage\r\n              <input\r\n                type=\"url\"\r\n                className={error === \"projectURLError\" ? \"error\" : \"\"}\r\n                placeholder={\"https://example.com\"}\r\n                value={projectURL}\r\n                onChange={onInputChange(\"projectURL\")}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Client script</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Copy\"}\r\n              icon={\"icon_copy\"}\r\n              onClick={copyScriptCode}\r\n            />\r\n          </div>\r\n          <div className={styles.sectionContent}>\r\n            <code className={styles.scriptCode}>{getScriptCode()}</code>{\" \"}\r\n          </div>\r\n        </div>\r\n        {isLoading ? <Spinner text={spinnerMessage} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectPage);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { ProjectsList } from \"./ProjectsList\";\r\nimport { ProjectPage } from \"./ProjectPage\";\r\n\r\nimport styles from './Projects.module.scss';\r\n\r\nconst Projects: React.FC = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className={styles.projects}>\r\n      {\" \"}\r\n      <Switch>\r\n        <Route exact path={`${url}`} component={ProjectsList} />\r\n        <Route path={`${url}/:id`} component={ProjectPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","import styles from \"./Settings.module.scss\";\r\ntype Props = {};\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Settings.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import styles from \"./Stats.module.scss\";\r\ntype Props = {};\r\n\r\nconst Stats: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Stats.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { lazy, Suspense } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { Spinner } from \"@/components\";\r\n\r\nimport styles from \"@/scss/main.module.scss\";\r\n\r\nconst Projects = lazy(\r\n  () => import(\"@/views/Cabinet/Projects\" /* webpackChunkName: \"Projects\" */)\r\n);\r\nconst Billing = lazy(\r\n  () => import(\"@/views/Cabinet/Billing\" /* webpackChunkName: \"Billing\" */)\r\n);\r\nconst Settings = lazy(\r\n  () => import(\"@/views/Cabinet/Settings\" /* webpackChunkName: \"Settings\" */)\r\n);\r\nconst Stats = lazy(\r\n  () => import(\"@/views/Cabinet/Stats\" /* webpackChunkName: \"Stats\" */)\r\n);\r\n\r\ntype Props = {};\r\n\r\nconst Cabinet: React.FC<Props> = () => {\r\n  const { url } = useRouteMatch();\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className={'page'}>\r\n      <div className={'pageContent'}>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            {/** Removing trailing slashes from the URL*/}\r\n            <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n\r\n            <Route path={`${url}/projects`} component={Projects} />\r\n            <Route path={`${url}/stats`} component={Stats} />\r\n            <Route path={`${url}/billing`} component={Billing} />\r\n            <Route path={`${url}/settings`} component={Settings} />\r\n            <Route\r\n              exact\r\n              path={`${url}/`}\r\n              component={() => <Redirect to={`${url}/projects`} />}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cabinet;\r\n"],"names":["stripePromise","loadStripe","CheckoutForm","createSubscription","store","_useState","useState","_useState2","_slicedToArray","clientSecret","setClientSecret","useEffect","then","secret","options","_jsx","id","children","EmbeddedCheckoutProvider","stripe","EmbeddedCheckout","CheckoutResult","_useState3","_useState4","sessionResult","setSessionResult","retrievePaymentSession","search","useLocation","session_id","URLSearchParams","get","JSON","stringify","observer","path","useRouteMatch","_jsxs","Switch","Route","exact","component","concat","ProjectTile","_ref","_id","projectName","projectCreationDate","projectURL","onDelete","url","className","styles","Link","to","Button","icon","text","onClick","memo","userProjects","_store$interface","setModalType","setCurrentProjectId","isLoading","onDeleteProjectClick","projectId","length","map","project","_objectSpread","Spinner","settings","widgetHeaderColor","widgetBackgroundColor","widgetBorderRadius","widgetBorderColor","widgetBorderWidth","pushNotification","userId","question","setQuestion","response","setResponse","_useState5","_useState6","setIsLoading","onQueryButtonClick","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$post","data","wrap","_context","prev","next","axios","sent","t0","type","message","finish","stop","apply","arguments","style","backgroundColor","borderRadius","borderColor","borderWidth","title","_Fragment","width","height","viewBox","focusable","cx","cy","r","fill","stroke","strokeLinecap","d","onChange","event","target","value","placeholder","disabled","_currentProject$proje","_currentProject$proje2","useParams","currentProject","setCurrentProject","setProjectName","setProjectURL","_useState7","_useState8","setWidgetHeaderColor","_useState9","_useState10","setWidgetBackgroundColor","_useState11","_useState12","setWidgetBorderRadius","_useState13","_useState14","setWidgetBorderColor","_useState15","_useState16","setWidgetBorderWidth","_useState17","_useState18","filesList","setFilesList","_useState19","_useState20","error","setError","_store$user","getProjectById","saveProjectSettings","ingestKnowledgeBase","spinnerMessage","setSpinnerMessage","_project$widgetSettin","widgetSettings","getScriptCode","onInputChange","e","onSaveMetadataClick","updatedProject","validateProjectName","validateURL","abrupt","onSaveWidgetSettingsClick","_callee2","_context2","handleFilesAdd","console","log","preventDefault","stopPropagation","files","dataTransfer","newFilesList","_toConsumableArray","i","push","onIngestKBClick","_ref3","_callee3","formData","_context3","FormData","forEach","file","append","display","min","max","DemoWidget","projectIngestedData","_ref4","fileName","size","Number","parseFloat","toFixed","onDragOver","accept","multiple","onDragEnd","Array","from","_ref5","name","window","navigator","clipboard","writeText","ProjectsList","ProjectPage","Projects","lazy","Billing","Settings","Stats","pathname","Suspense","fallback","Redirect","slice"],"sourceRoot":""}
{"version":3,"file":"static/js/Cabinet.effd0dec.chunk.js","mappings":"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","sources":["views/Cabinet/Billing/Billing.tsx","webpack://content_insight_frontend/./src/components/ProjectTile/ProjectTile.module.scss?4035","components/ProjectTile/ProjectTile.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectsList/ProjectsList.module.scss?29ea","views/Cabinet/Projects/ProjectsList/ProjectsList.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectPage/ProjectPage.module.scss?bdf2","webpack://content_insight_frontend/./src/components/DemoWidget/DemoWidget.module.scss?51f3","components/DemoWidget/DemoWidget.tsx","views/Cabinet/Projects/ProjectPage/ProjectPage.tsx","views/Cabinet/Projects/Projects.module.scss","views/Cabinet/Projects/Projects.tsx","views/Cabinet/Settings/Settings.tsx","views/Cabinet/Stats/Stats.tsx","views/Cabinet/Cabinet.tsx"],"sourcesContent":["import styles from \"./Billing.module.scss\";\r\ntype Props = {};\r\n\r\nconst Billing: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Billing.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Billing;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectTile\":\"ProjectTile_projectTile__quj6f\",\"projectDetails\":\"ProjectTile_projectDetails__grJt9\",\"projectName\":\"ProjectTile_projectName__zn2aT\",\"projectURL\":\"ProjectTile_projectURL__QeNpF\",\"projectControls\":\"ProjectTile_projectControls__P+4YV\"};","import { UserProjectType } from \"@/MST/user\";\r\nimport { memo } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport Button from \"../elements/Button\";\r\nimport styles from \"./ProjectTile.module.scss\";\r\n\r\ntype Props = UserProjectType & { onDelete: (projectId: string) =>void };\r\n\r\nconst ProjectTile: React.FC<Props> = ({\r\n  _id,\r\n  projectName,\r\n  projectCreationDate,\r\n  projectURL,\r\n  onDelete,\r\n}) => {\r\n  const { url } = useRouteMatch();\r\n\r\n  const onDeleteClick = () => {\r\n    onDelete(_id || '');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectTile}>\r\n      <div className={styles.projectDetails}>\r\n        {\" \"}\r\n        <Link to={`${url}/${_id}`}>\r\n          <div className={styles.projectName}>{projectName}</div>\r\n          <div className={styles.projectURL}>URL: {projectURL}</div>\r\n          <div className={styles.projectURL}>\r\n            Created: {projectCreationDate}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectControls}>\r\n        <Button icon=\"icon_delete\" text={\"Delete project\"} onClick={onDeleteClick}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProjectTile);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectsContainer\":\"ProjectsList_projectsContainer__q0Cj8\",\"addProjectButton\":\"ProjectsList_addProjectButton__pAUz0\",\"projectTilesWrapper\":\"ProjectsList_projectTilesWrapper__BioBg\"};","import { observer } from \"mobx-react-lite\";\r\nimport { Button, Spinner} from \"@/components\";\r\nimport { ProjectTile } from \"@/components/ProjectTile\";\r\nimport store from \"@/MST/store\";\r\n\r\nimport styles from \"./ProjectsList.module.scss\";\r\n\r\nconst ProjectsList: React.FC = () => {\r\n  \r\n  const { userProjects } = store.user;\r\n  const { setModalType, setCurrentProjectId, isLoading } = store.interface;\r\n\r\n  const onCreateProjectClick = () => {\r\n    setModalType('projectCreate');\r\n  };\r\n\r\n  const onDeleteProjectClick = (projectId: string) => {\r\n    setCurrentProjectId(projectId);\r\n    setModalType('projectDelete');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectsContainer}>\r\n      <Button\r\n        icon=\"icon_plus\"\r\n        text={\"Add project\"}\r\n        className={styles.addProjectButton}\r\n        onClick={onCreateProjectClick}\r\n      />\r\n      <div className={styles.projectTilesWrapper}>\r\n        {userProjects.length\r\n          ? userProjects.map((project) => <ProjectTile key={project._id} {...project} onDelete={onDeleteProjectClick} />)\r\n          : \"You dont have any projects yet.\"}\r\n      </div>\r\n      \r\n      {isLoading ? <Spinner /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectsList);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectPageWrapper\":\"ProjectPage_projectPageWrapper__DfPKp\",\"projectPage\":\"ProjectPage_projectPage__gPfMH\",\"projectHeader\":\"ProjectPage_projectHeader__Npbm9\",\"projectPageSection\":\"ProjectPage_projectPageSection__BaH67\",\"sectionHeader\":\"ProjectPage_sectionHeader__8KMsL\",\"sectionContent\":\"ProjectPage_sectionContent__WjGjw\",\"widgetSettings\":\"ProjectPage_widgetSettings__huTlX\",\"widgetControls\":\"ProjectPage_widgetControls__K+gdZ\",\"color\":\"ProjectPage_color__rsOVr\",\"sourceURL\":\"ProjectPage_sourceURL__7Ep6N\",\"range\":\"ProjectPage_range__ZyIDn\",\"demoWidgetWrapper\":\"ProjectPage_demoWidgetWrapper__FsfhT\",\"knowledgeBase\":\"ProjectPage_knowledgeBase__pVuHl\",\"knowledgeBaseList\":\"ProjectPage_knowledgeBaseList__HxEv1\",\"knowledgeBaseUploadForm\":\"ProjectPage_knowledgeBaseUploadForm__k82B2\",\"scriptCode\":\"ProjectPage_scriptCode__YCQon\",\"buttonsWrapper\":\"ProjectPage_buttonsWrapper__uchQ+\",\"dragndropMessage\":\"ProjectPage_dragndropMessage__cuePI\",\"filesList\":\"ProjectPage_filesList__qlSQN\"};","// extracted by mini-css-extract-plugin\nexport default {\"clarify_bot_chat_popup\":\"DemoWidget_clarify_bot_chat_popup__tr2iz\",\"closed\":\"DemoWidget_closed__DloXd\",\"clarify_bot_header\":\"DemoWidget_clarify_bot_header__AFB4+\",\"clarify_bot_toggle_button\":\"DemoWidget_clarify_bot_toggle_button__3Uy9c\",\"clarify_bot_content\":\"DemoWidget_clarify_bot_content__PjVly\",\"clarify_bot_input_wrapper\":\"DemoWidget_clarify_bot_input_wrapper__qbBsJ\",\"clarify_bot_ask_button\":\"DemoWidget_clarify_bot_ask_button__rTXgY\"};","import { ChangeEvent, useState } from \"react\";\r\nimport store from \"@/MST/store\";\r\nimport Spinner from \"../elements/Spinner\";\r\nimport styles from \"./DemoWidget.module.scss\";\r\nimport axios from \"axios\";\r\n\r\ntype Props = {\r\n  settings: {\r\n    projectId: string;\r\n    widgetHeaderColor: string;\r\n    widgetBackgroundColor: string;\r\n    widgetBorderRadius: string;\r\n    widgetBorderColor: string;\r\n    widgetBorderWidth: string;\r\n  };\r\n};\r\n\r\nconst DemoWidget: React.FC<Props> = ({ settings }) => {\r\n  const {\r\n    projectId,\r\n    widgetHeaderColor,\r\n    widgetBackgroundColor,\r\n    widgetBorderRadius,\r\n    widgetBorderColor,\r\n    widgetBorderWidth,\r\n  } = settings;\r\n\r\n  const { pushNotification } = store.interface;\r\n  const { _id: userId } = store.user;\r\n\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onQueryInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setQuestion(event.target.value);\r\n  };\r\n\r\n  const onQueryButtonClick = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const { data } = await axios.post(\"/getCompletion\", {\r\n        userId,\r\n        projectId,\r\n        question,\r\n      });\r\n      setResponse(data.response);\r\n    } catch (e: any) {\r\n      pushNotification({\r\n        type: \"error\",\r\n        message: \"Error getting the responsse : \\n\" + e.message,\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onClearClick = () => {\r\n    setQuestion('');\r\n    setResponse('');\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.clarify_bot_chat_popup}\r\n      style={{\r\n        backgroundColor: widgetBackgroundColor,\r\n        borderRadius: widgetBorderRadius + \"px\",\r\n        borderColor: widgetBorderColor,\r\n        borderWidth: widgetBorderWidth + \"px\",\r\n      }}\r\n    >\r\n      <div\r\n        className={styles.clarify_bot_header}\r\n        style={{ backgroundColor: widgetHeaderColor }}\r\n      >\r\n        Help\r\n        <button\r\n          className={styles.clarify_bot_toggle_button}\r\n          title=\"open / close\"\r\n        >          _\r\n        </button>\r\n      </div>\r\n      <div className={styles.clarify_bot_content}>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <div className={styles.clarify_bot_input_wrapper}>\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" focusable=\"false\">\r\n                <circle\r\n                  cx=\"6\"\r\n                  cy=\"6\"\r\n                  r=\"5.5\"\r\n                  fill=\"none\"\r\n                  stroke=\"black\"\r\n                ></circle>\r\n                <path\r\n                  stroke=\"black\"\r\n                  strokeLinecap=\"round\"\r\n                  d=\"M15 15l-5-5\"\r\n                ></path>\r\n              </svg>\r\n              <input\r\n                onChange={onQueryInputChange}\r\n                value={question}\r\n                className={styles.clarify_bot_question_input}\r\n                placeholder=\"How can we help?\"\r\n              />\r\n              <button className={styles.clarify_bot_clear_button} onClick={onClearClick}>\r\n                <svg\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  focusable=\"false\"\r\n                >\r\n                  <path\r\n                    stroke=\"black\"\r\n                    strokeLinecap=\"round\"\r\n                    d=\"M3 13L13 3m0 10L3 3\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            {response ? (\r\n              <div className=\"clarify_bot_response_block\">{response}</div>\r\n            ) : (\r\n              <button\r\n                disabled={!question}\r\n                title=\"Send question request\"\r\n                className={styles.clarify_bot_ask_button}\r\n                onClick={onQueryButtonClick}\r\n              >\r\n                Ask!\r\n              </button>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoWidget;\r\n","import { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Spinner } from \"@/components\";\r\n\r\nimport store from \"@/MST/store\";\r\n\r\nimport { UserProjectType } from \"@/MST/user\";\r\n\r\nimport styles from \"./ProjectPage.module.scss\";\r\nimport { validateProjectName, validateURL } from \"@/utils/validators\";\r\nimport DemoWidget from \"@/components/DemoWidget\";\r\n\r\nconst ProjectPage: React.FC = () => {\r\n  const { id: projectId }: { id: string } = useParams();\r\n  const [currentProject, setCurrentProject] = useState<UserProjectType>();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [projectURL, setProjectURL] = useState(\"\");\r\n  const [widgetHeaderColor, setWidgetHeaderColor] = useState(\"\");\r\n  const [widgetBackgroundColor, setWidgetBackgroundColor] = useState(\"\");\r\n  const [widgetBorderRadius, setWidgetBorderRadius] = useState(\"0\");\r\n  const [widgetBorderColor, setWidgetBorderColor] = useState(\"\");\r\n  const [widgetBorderWidth, setWidgetBorderWidth] = useState(\"0\");\r\n  const [filesList, setFilesList] = useState<File[]>([]);\r\n  const [spinnerMessage, setSpinnerMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    user: {\r\n      _id: userId,\r\n      getProjectById,\r\n      saveProjectSettings,\r\n      ingestKnowledgeBase,\r\n    },\r\n    interface: {\r\n      isLoading,\r\n      spinnerMessage : sp1,\r\n      pushNotification,\r\n      setIsLoading,\r\n      setCurrentProjectId,\r\n      setModalType,\r\n    },\r\n  } = store;\r\n\r\n  const project = getProjectById(projectId);\r\n\r\n  useEffect(() => {\r\n    if (!project) return;\r\n    const {\r\n      projectName,\r\n      projectURL,\r\n      widgetSettings: {\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n        widgetBorderRadius,\r\n      },\r\n    } = project;\r\n\r\n    setCurrentProject(project);\r\n    setProjectName(projectName || \"\");\r\n    setProjectURL(projectURL || \"\");\r\n    setWidgetHeaderColor(widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetBorderRadius || \"\");\r\n  }, [project]);\r\n\r\n  const getScriptCode = () => {\r\n    return `   <script\r\n    id=\"clarify_bot_widget\"\r\n    data-userId=\"${userId}\"\r\n    data-projectId=\"${projectId}\"\r\n    src=\"https://content-insight-backend-c244a3d2147a.herokuapp.com/widget/getWidget\"\r\n    data-backendURL=\"https://content-insight-backend-c244a3d2147a.herokuapp.com\"\r\n   ></script>`;\r\n  };\r\n\r\n  const copyScriptCode = () => {\r\n    window.navigator.clipboard.writeText(getScriptCode()).then(() =>\r\n      pushNotification({\r\n        type: \"info\",\r\n        message: \"Script copied to clipboard.\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onInputChange =\r\n    (type: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      console.log(e.target.value);\r\n      switch (type) {\r\n        case \"projectName\": {\r\n          setProjectName(e.target.value);\r\n          break;\r\n        }\r\n        case \"projectURL\": {\r\n          setProjectURL(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetHeaderColor\": {\r\n          setWidgetHeaderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBackgroundColor\": {\r\n          setWidgetBackgroundColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderColor\": {\r\n          setWidgetBorderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderWidth\": {\r\n          setWidgetBorderWidth(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderRadius\": {\r\n          setWidgetBorderRadius(e.target.value);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const validateMetadata = () => {\r\n    if (!validateProjectName(projectName)) {\r\n      setError(\"projectNameError\");\r\n      return false;\r\n    }\r\n    if (!validateURL(projectURL)) {\r\n      setError(\"projectURLError\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSaveMetadataClick = async () => {\r\n    if (!validateMetadata()) return;\r\n    setError(\"\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      projectName,\r\n      projectURL,\r\n    };\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating project metadata...\");\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetMetadata = () => {\r\n    setProjectName(currentProject?.projectName || \"\");\r\n    setProjectURL(currentProject?.projectURL || \"\");\r\n  };\r\n\r\n  const onSaveWidgetSettingsClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating widget settings...\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      widgetSettings: {\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderRadius,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n      },\r\n    };\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetWidgetSettings = () => {\r\n    if (!currentProject) return;\r\n    const { widgetSettings } = currentProject;\r\n    setWidgetHeaderColor(widgetSettings?.widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetSettings?.widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetSettings?.widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetSettings?.widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetSettings?.widgetBorderRadius || \"\");\r\n  };\r\n\r\n  const handleFilesAdd = (e: any) => {\r\n    console.log(\"handleFilesAdd\");\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // defining if we added file through dialogue window - or drag'ndrop\r\n    try {\r\n      const files: FileList =\r\n        e.type === \"drop\" ? e.dataTransfer.files : e.target.files;\r\n      const newFilesList = [...filesList];\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        if (files[i].type !== \"text/plain\") continue;\r\n        newFilesList.push(files[i]);\r\n      }\r\n      setFilesList(newFilesList);\r\n    } catch (error: any) {\r\n      pushNotification({\r\n        type: \"error\",\r\n        message:\r\n          \"Error while loading files from local drive. \\n\" + error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIngestKBClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Ingesting knowledge base\");\r\n    const formData = new FormData();\r\n    filesList.forEach((file) => {\r\n      formData.append(\"dataFiles\", file);\r\n    });\r\n\r\n    formData.append(\"projectId\", currentProject?._id || \"\");\r\n    formData.append(\"projectName\", currentProject?.projectName || \"\");\r\n\r\n    await ingestKnowledgeBase(formData);\r\n    setFilesList([]);\r\n  };\r\n\r\n  const onDeleteKBClick = () => {\r\n    setCurrentProjectId(currentProject?._id || \"\");\r\n    setSpinnerMessage(\"Deleting knowledge base\");\r\n    setModalType(\"proejctKBDelete\");\r\n    setFilesList([]);\r\n  };\r\n\r\n  if (!currentProject) return <div>Project not found.</div>;\r\n\r\n  return (\r\n    <div className={styles.projectPageWrapper}>\r\n      <div className={styles.projectHeader}>\r\n        <h1>Project : {currentProject.projectName}</h1>{\" \"}\r\n        <Link\r\n          to={\"/cabinet/projects\"}\r\n          style={{ display: \"block\", width: \"fit-content\" }}\r\n        >\r\n          <Button icon=\"icon_arrow_left\" text={\"To projects list\"} />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectPage}>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Widget settings</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Discard\"}\r\n              icon={\"icon_close\"}\r\n              onClick={resetWidgetSettings}\r\n            />\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Save\"}\r\n              icon={\"icon_save\"}\r\n              onClick={onSaveWidgetSettingsClick}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.sectionContent + \" \" + styles.widgetSettings}>\r\n            <div className={styles.widgetControls}>\r\n              {\" \"}\r\n              <label className={styles.color}>\r\n                Header color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetHeaderColor}\r\n                  onChange={onInputChange(\"widgetHeaderColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.color}>\r\n                Background color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetBackgroundColor}\r\n                  onChange={onInputChange(\"widgetBackgroundColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.color}>\r\n                Border color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetBorderColor}\r\n                  onChange={onInputChange(\"widgetBorderColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.range}>\r\n                Border width, px\r\n                <input\r\n                  type=\"range\"\r\n                  min={0}\r\n                  max={6}\r\n                  value={widgetBorderWidth}\r\n                  onChange={onInputChange(\"widgetBorderWidth\")}\r\n                />\r\n              </label>\r\n              <label className={styles.range}>\r\n                Border radius, px\r\n                <input\r\n                  type=\"range\"\r\n                  min={0}\r\n                  max={30}\r\n                  value={widgetBorderRadius}\r\n                  onChange={onInputChange(\"widgetBorderRadius\")}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className={styles.demoWidgetWrapper}>\r\n              <DemoWidget\r\n                settings={{\r\n                  projectId,\r\n                  widgetHeaderColor,\r\n                  widgetBackgroundColor,\r\n                  widgetBorderRadius,\r\n                  widgetBorderColor,\r\n                  widgetBorderWidth,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Knowledge base</h2>\r\n            <div className={styles.buttonsWrapper}>\r\n              <Button\r\n                disabled={isLoading || !filesList.length}\r\n                text={\"Ingest\"}\r\n                icon={\"icon_edit\"}\r\n                onClick={onIngestKBClick}\r\n              />\r\n              <Button\r\n                disabled={\r\n                  isLoading || !currentProject?.projectIngestedData?.length\r\n                }\r\n                text={\"Delete\"}\r\n                icon={\"icon_delete\"}\r\n                onClick={onDeleteKBClick}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles.sectionContent + \" \" + styles.knowledgeBase}>\r\n            <div>\r\n              <label>List of knowledgebase files</label>\r\n              <div className={styles.knowledgeBaseList}>\r\n                <ul className={styles.filesList}>\r\n                  {currentProject?.projectIngestedData?.map(\r\n                    ({ fileName, size }) => (\r\n                      <li key={fileName}>\r\n                        <span>{fileName}</span>\r\n                        <span>\r\n                          {Number.parseFloat(size || \"\").toFixed(2)} kb\r\n                        </span>\r\n                      </li>\r\n                    )\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label>Ingest files</label>\r\n\r\n              <div\r\n                className={styles.knowledgeBaseUploadForm}\r\n                onDragOver={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                {filesList?.length ? (\r\n                  <ul className={styles.filesList}>\r\n                    {Array.from(filesList).map(({ name, size }) => {\r\n                      return (\r\n                        <li key={name + size}>\r\n                          <span>{name}</span>\r\n                          <span>{size}</span>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                ) : (\r\n                  <div className={styles.dragndropMessage}>\r\n                    Drag'n'drop txt files or click the area for dialog window.\r\n                    Files are adding up to the ones that are already in\r\n                    knowledge base.\r\n                  </div>\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".txt\"\r\n                  multiple={true}\r\n                  onDragEnd={handleFilesAdd}\r\n                  onChange={handleFilesAdd}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>{\" \"}\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Metadata</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Discard\"}\r\n              icon={\"icon_close\"}\r\n              onClick={resetMetadata}\r\n            />\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Save\"}\r\n              icon={\"icon_save\"}\r\n              onClick={onSaveMetadataClick}\r\n            />\r\n          </div>\r\n          <div className={styles.sectionContent}>\r\n            <label>\r\n              Project name\r\n              <span className=\"hintText\">\r\n                leters, numbers, dashes are allowed\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                className={error === \"projectNameError\" ? \"error\" : \"\"}\r\n                placeholder={\"project-name\"}\r\n                value={projectName}\r\n                onChange={onInputChange(\"projectName\")}\r\n              />\r\n            </label>\r\n            <label>\r\n              Project URL for the widget usage\r\n              <input\r\n                type=\"url\"\r\n                className={error === \"projectURLError\" ? \"error\" : \"\"}\r\n                placeholder={\"https://example.com\"}\r\n                value={projectURL}\r\n                onChange={onInputChange(\"projectURL\")}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Client script</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Copy\"}\r\n              icon={\"icon_copy\"}\r\n              onClick={copyScriptCode}\r\n            />\r\n          </div>\r\n          <div className={styles.sectionContent}>\r\n            <code className={styles.scriptCode}>{getScriptCode()}</code>{\" \"}\r\n          </div>\r\n        </div>\r\n        {isLoading ? <Spinner text={sp1 || spinnerMessage} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectPage);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { ProjectsList } from \"./ProjectsList\";\r\nimport { ProjectPage } from \"./ProjectPage\";\r\n\r\nimport styles from './Projects.module.scss';\r\n\r\nconst Projects: React.FC = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className={styles.projects}>\r\n      {\" \"}\r\n      <Switch>\r\n        <Route exact path={`${url}`} component={ProjectsList} />\r\n        <Route path={`${url}/:id`} component={ProjectPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","import styles from \"./Settings.module.scss\";\r\ntype Props = {};\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Settings.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import styles from \"./Stats.module.scss\";\r\ntype Props = {};\r\n\r\nconst Stats: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Stats.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { lazy, Suspense } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { Spinner } from \"@/components\";\r\n\r\nimport styles from \"@/scss/main.module.scss\";\r\n\r\nconst Projects = lazy(\r\n  () => import(\"@/views/Cabinet/Projects\" /* webpackChunkName: \"Projects\" */)\r\n);\r\nconst Billing = lazy(\r\n  () => import(\"@/views/Cabinet/Billing\" /* webpackChunkName: \"Billing\" */)\r\n);\r\nconst Settings = lazy(\r\n  () => import(\"@/views/Cabinet/Settings\" /* webpackChunkName: \"Settings\" */)\r\n);\r\nconst Stats = lazy(\r\n  () => import(\"@/views/Cabinet/Stats\" /* webpackChunkName: \"Stats\" */)\r\n);\r\n\r\ntype Props = {};\r\n\r\nconst Cabinet: React.FC<Props> = () => {\r\n  const { url } = useRouteMatch();\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className={'page'}>\r\n      <div className={'pageContent'}>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            {/** Removing trailing slashes from the URL*/}\r\n            <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n\r\n            <Route path={`${url}/projects`} component={Projects} />\r\n            <Route path={`${url}/stats`} component={Stats} />\r\n            <Route path={`${url}/billing`} component={Billing} />\r\n            <Route path={`${url}/settings`} component={Settings} />\r\n            <Route\r\n              exact\r\n              path={`${url}/`}\r\n              component={() => <Redirect to={`${url}/projects`} />}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cabinet;\r\n"],"names":["_jsx","children","ProjectTile","_ref","_id","projectName","projectCreationDate","projectURL","onDelete","url","useRouteMatch","_jsxs","className","styles","Link","to","concat","Button","icon","text","onClick","memo","observer","userProjects","store","_store$interface","setModalType","setCurrentProjectId","isLoading","onDeleteProjectClick","projectId","length","map","project","_objectSpread","Spinner","settings","widgetHeaderColor","widgetBackgroundColor","widgetBorderRadius","widgetBorderColor","widgetBorderWidth","pushNotification","userId","_useState","useState","_useState2","_slicedToArray","question","setQuestion","_useState3","_useState4","response","setResponse","_useState5","_useState6","setIsLoading","onQueryButtonClick","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$post","data","wrap","_context","prev","next","axios","sent","t0","type","message","finish","stop","apply","arguments","style","backgroundColor","borderRadius","borderColor","borderWidth","title","_Fragment","width","height","viewBox","focusable","cx","cy","r","fill","stroke","strokeLinecap","d","onChange","event","target","value","placeholder","disabled","_currentProject$proje","_currentProject$proje2","useParams","id","currentProject","setCurrentProject","setProjectName","setProjectURL","_useState7","_useState8","setWidgetHeaderColor","_useState9","_useState10","setWidgetBackgroundColor","_useState11","_useState12","setWidgetBorderRadius","_useState13","_useState14","setWidgetBorderColor","_useState15","_useState16","setWidgetBorderWidth","_useState17","_useState18","filesList","setFilesList","_useState19","_useState20","spinnerMessage","setSpinnerMessage","_useState21","_useState22","error","setError","_store$user","getProjectById","saveProjectSettings","ingestKnowledgeBase","sp1","useEffect","_project$widgetSettin","widgetSettings","getScriptCode","onInputChange","e","console","log","onSaveMetadataClick","updatedProject","validateProjectName","validateURL","abrupt","onSaveWidgetSettingsClick","_callee2","_context2","handleFilesAdd","preventDefault","stopPropagation","files","dataTransfer","newFilesList","_toConsumableArray","i","push","onIngestKBClick","_ref3","_callee3","formData","_context3","FormData","forEach","file","append","display","min","max","DemoWidget","projectIngestedData","_ref4","fileName","size","Number","parseFloat","toFixed","onDragOver","Array","from","_ref5","name","accept","multiple","onDragEnd","window","navigator","clipboard","writeText","then","Switch","Route","exact","path","component","ProjectsList","ProjectPage","Projects","lazy","Billing","Settings","Stats","pathname","useLocation","Suspense","fallback","Redirect","slice"],"sourceRoot":""}
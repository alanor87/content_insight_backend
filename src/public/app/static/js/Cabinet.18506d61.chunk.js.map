{"version":3,"file":"static/js/Cabinet.18506d61.chunk.js","mappings":"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","sources":["views/Cabinet/Billing/Billing.tsx","webpack://content_insight_frontend/./src/components/ProjectTile/ProjectTile.module.scss?4035","components/ProjectTile/ProjectTile.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectsList/ProjectsList.module.scss?29ea","views/Cabinet/Projects/ProjectsList/ProjectsList.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectPage/ProjectPage.module.scss?bdf2","views/Cabinet/Projects/ProjectPage/ProjectPage.tsx","views/Cabinet/Projects/Projects.module.scss","views/Cabinet/Projects/Projects.tsx","views/Cabinet/Settings/Settings.tsx","views/Cabinet/Stats/Stats.tsx","views/Cabinet/Cabinet.tsx"],"sourcesContent":["import styles from \"./Billing.module.scss\";\r\ntype Props = {};\r\n\r\nconst Billing: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Billing.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Billing;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectTile\":\"ProjectTile_projectTile__quj6f\",\"projectDetails\":\"ProjectTile_projectDetails__grJt9\",\"projectName\":\"ProjectTile_projectName__zn2aT\",\"projectURL\":\"ProjectTile_projectURL__QeNpF\",\"projectControls\":\"ProjectTile_projectControls__P+4YV\"};","import { UserProjectType } from \"@/MST/user\";\r\nimport { memo } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport Button from \"../elements/Button\";\r\nimport styles from \"./ProjectTile.module.scss\";\r\n\r\ntype Props = UserProjectType & { onDelete: (projectId: string) =>void };\r\n\r\nconst ProjectTile: React.FC<Props> = ({\r\n  _id,\r\n  projectName,\r\n  projectCreationDate,\r\n  projectURL,\r\n  onDelete,\r\n}) => {\r\n  const { url } = useRouteMatch();\r\n\r\n  const onDeleteClick = () => {\r\n    onDelete(_id || '');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectTile}>\r\n      <div className={styles.projectDetails}>\r\n        {\" \"}\r\n        <Link to={`${url}/${_id}`}>\r\n          <div className={styles.projectName}>{projectName}</div>\r\n          <div className={styles.projectURL}>URL: {projectURL}</div>\r\n          <div className={styles.projectURL}>\r\n            Created: {projectCreationDate}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectControls}>\r\n        <Button icon=\"icon_delete\" text={\"Delete project\"} onClick={onDeleteClick}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProjectTile);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectsContainer\":\"ProjectsList_projectsContainer__q0Cj8\",\"addProjectButton\":\"ProjectsList_addProjectButton__pAUz0\",\"projectTilesWrapper\":\"ProjectsList_projectTilesWrapper__BioBg\"};","import { observer } from \"mobx-react-lite\";\r\nimport { Button, Spinner} from \"@/components\";\r\nimport { ProjectTile } from \"@/components/ProjectTile\";\r\nimport store from \"@/MST/store\";\r\n\r\nimport styles from \"./ProjectsList.module.scss\";\r\n\r\nconst ProjectsList: React.FC = () => {\r\n  \r\n  const { userProjects } = store.user;\r\n  const { setModalType, setCurrentProjectId, isLoading } = store.interface;\r\n\r\n  const onCreateProjectClick = () => {\r\n    setModalType('projectCreate');\r\n  };\r\n\r\n  const onDeleteProjectClick = (projectId: string) => {\r\n    setCurrentProjectId(projectId);\r\n    setModalType('projectDelete');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectsContainer}>\r\n      <Button\r\n        icon=\"icon_plus\"\r\n        text={\"Add project\"}\r\n        className={styles.addProjectButton}\r\n        onClick={onCreateProjectClick}\r\n      />\r\n      <div className={styles.projectTilesWrapper}>\r\n        {userProjects.length\r\n          ? userProjects.map((project) => <ProjectTile key={project._id} {...project} onDelete={onDeleteProjectClick} />)\r\n          : \"You dont have any projects yet.\"}\r\n      </div>\r\n      \r\n      {isLoading ? <Spinner /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectsList);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectPageWrapper\":\"ProjectPage_projectPageWrapper__DfPKp\",\"projectPage\":\"ProjectPage_projectPage__gPfMH\",\"projectHeader\":\"ProjectPage_projectHeader__Npbm9\",\"settings\":\"ProjectPage_settings__O-GlV\",\"scriptCode\":\"ProjectPage_scriptCode__YCQon\",\"widgetStyleControls\":\"ProjectPage_widgetStyleControls__-VlRI\",\"color\":\"ProjectPage_color__rsOVr\",\"range\":\"ProjectPage_range__ZyIDn\",\"knowledgeBase\":\"ProjectPage_knowledgeBase__pVuHl\",\"knowledgeBaseList\":\"ProjectPage_knowledgeBaseList__HxEv1\",\"knowledgeBaseUploadForm\":\"ProjectPage_knowledgeBaseUploadForm__k82B2\",\"projectPageSection\":\"ProjectPage_projectPageSection__BaH67\",\"sectionHeader\":\"ProjectPage_sectionHeader__8KMsL\",\"sectionContent\":\"ProjectPage_sectionContent__WjGjw\",\"buttonsWrapper\":\"ProjectPage_buttonsWrapper__uchQ+\",\"dragndropMessage\":\"ProjectPage_dragndropMessage__cuePI\",\"filesList\":\"ProjectPage_filesList__qlSQN\"};","import { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Spinner } from \"@/components\";\r\n\r\nimport store from \"@/MST/store\";\r\n\r\nimport { UserProjectType } from \"@/MST/user\";\r\n\r\nimport styles from \"./ProjectPage.module.scss\";\r\nimport { validateProjectName, validateURL } from \"@/utils/validators\";\r\n\r\nconst ProjectPage: React.FC = () => {\r\n  const { id: projectId }: { id: string } = useParams();\r\n  const [currentProject, setCurrentProject] = useState<UserProjectType>();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [projectURL, setProjectURL] = useState(\"\");\r\n  const [widgetURL, setWidgetURL] = useState(\"\");\r\n  const [widgetHeaderColor, setWidgetHeaderColor] = useState(\"\");\r\n  const [widgetBackgroundColor, setWidgetBackgroundColor] = useState(\"\");\r\n  const [widgetBorderRadius, setWidgetBorderRadius] = useState(\"0\");\r\n  const [widgetBorderColor, setWidgetBorderColor] = useState(\"\");\r\n  const [widgetBorderWidth, setWidgetBorderWidth] = useState(\"0\");\r\n  const [filesList, setFilesList] = useState<File[]>([]);\r\n  const [spinnerMessage, setSpinnerMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    user: {\r\n      _id: userId,\r\n      getProjectById,\r\n      saveProjectSettings,\r\n      ingestKnowledgeBase,\r\n    },\r\n    interface: {\r\n      isLoading,\r\n      pushNotification,\r\n      setIsLoading,\r\n      setCurrentProjectId,\r\n      setModalType,\r\n    },\r\n  } = store;\r\n\r\n  const project = getProjectById(projectId);\r\n\r\n  useEffect(() => {\r\n    if (!project) return;\r\n    const {\r\n      projectName,\r\n      projectURL,\r\n      widgetSettings: {\r\n        widgetURL,\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n        widgetBorderRadius,\r\n      },\r\n    } = project;\r\n\r\n    setCurrentProject(project);\r\n    setProjectName(projectName || \"\");\r\n    setProjectURL(projectURL || \"\");\r\n    setWidgetURL(widgetURL || \"\");\r\n    setWidgetHeaderColor(widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetBorderRadius || \"\");\r\n  }, [project]);\r\n\r\n  const getScriptCode = () => {\r\n    return `   <script\r\n    id=\"content_insight_widget\"\r\n    data-userId=\"${userId}\"\r\n    data-projectId=\"${projectId}\"\r\n    src=\"${widgetURL}\"\r\n    data-completionsURL=\"https://content-insight-backend-c244a3d2147a.herokuapp.com/api/v1/getCompletion\"\r\n   ></script>`;\r\n  };\r\n\r\n  const copyScriptCode = () => {\r\n    window.navigator.clipboard.writeText(getScriptCode()).then(() =>\r\n      pushNotification({\r\n        type: \"info\",\r\n        message: \"Script copied to clipboard.\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onInputChange =\r\n    (type: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      console.log(e.target.value);\r\n      switch (type) {\r\n        case \"projectName\": {\r\n          setProjectName(e.target.value);\r\n          break;\r\n        }\r\n        case \"projectURL\": {\r\n          setProjectURL(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetURL\": {\r\n          setWidgetURL(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetHeaderColor\": {\r\n          setWidgetHeaderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBackgroundColor\": {\r\n          setWidgetBackgroundColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderColor\": {\r\n          setWidgetBorderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderWidth\": {\r\n          setWidgetBorderWidth(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderRadius\": {\r\n          setWidgetBorderRadius(e.target.value);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const validateMetadata = () => {\r\n    if (!validateProjectName(projectName)) {\r\n      setError(\"projectNameError\");\r\n      return false;\r\n    }\r\n    if (!validateURL(projectURL)) {\r\n      setError(\"projectURLError\");\r\n      return false;\r\n    }\r\n    if (!validateURL(widgetURL)) {\r\n      setError(\"widgetURLError\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSaveMetadataClick = async () => {\r\n    if (!validateMetadata()) return;\r\n    setError(\"\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      projectName,\r\n      projectURL,\r\n    };\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating project metadata...\");\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetMetadata = () => {\r\n    setProjectName(currentProject?.projectName || \"\");\r\n    setProjectURL(currentProject?.projectURL || \"\");\r\n  };\r\n\r\n  const onSaveWidgetSettingsClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating widget settings...\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      widgetSettings: {\r\n        widgetURL,\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderRadius,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n      },\r\n    };\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetWidgetSettings = () => {\r\n    if (!currentProject) return;\r\n    const { widgetSettings } = currentProject;\r\n    setWidgetURL(widgetSettings?.widgetURL || \"\");\r\n    setWidgetHeaderColor(widgetSettings?.widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetSettings?.widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetSettings?.widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetSettings?.widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetSettings?.widgetBorderRadius || \"\");\r\n  };\r\n\r\n  const handleFilesAdd = (e: any) => {\r\n    console.log(\"handleFilesAdd\");\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // defining if we added file through dialogue window - or drag'ndrop\r\n    try {\r\n      const files: FileList =\r\n        e.type === \"drop\" ? e.dataTransfer.files : e.target.files;\r\n      const newFilesList = [...filesList];\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        if (files[i].type !== \"text/plain\") continue;\r\n        newFilesList.push(files[i]);\r\n      }\r\n      setFilesList(newFilesList);\r\n    } catch (error: any) {\r\n      pushNotification({\r\n        type: \"error\",\r\n        message:\r\n          \"Error while loading files from local drive. \\n\" + error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIngestKBClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Ingesting knowledge base\");\r\n    const formData = new FormData();\r\n    filesList.forEach((file) => {\r\n      formData.append(\"dataFiles\", file);\r\n    });\r\n\r\n    formData.append(\"projectId\", currentProject?._id || \"\");\r\n    formData.append(\"projectName\", currentProject?.projectName || \"\");\r\n\r\n    await ingestKnowledgeBase(formData);\r\n    setFilesList([]);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const onDeleteKBClick = () => {\r\n    setCurrentProjectId(currentProject?._id || \"\");\r\n    setSpinnerMessage(\"Deleting knowledge base\");\r\n    setModalType(\"proejctKBDelete\");\r\n    setFilesList([]);\r\n  };\r\n\r\n  if (!currentProject) return <div>Project not found.</div>;\r\n\r\n  return (\r\n    <div className={styles.projectPageWrapper}>\r\n      <div className={styles.projectHeader}>\r\n        <h1>Project : {currentProject.projectName}</h1>{\" \"}\r\n        <Link\r\n          to={\"/cabinet/projects\"}\r\n          style={{ display: \"block\", width: \"fit-content\" }}\r\n        >\r\n          <Button icon=\"icon_arrow_left\" text={\"To projects list\"} />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectPage}>\r\n        <div className={styles.settings}>\r\n          <div className={styles.projectPageSection}>\r\n            <div className={styles.sectionHeader}>\r\n              <h2>Client script</h2>\r\n              <Button\r\n                disabled={isLoading}\r\n                text={\"Copy\"}\r\n                icon={\"icon_copy\"}\r\n                onClick={copyScriptCode}\r\n              />\r\n            </div>\r\n            <div className={styles.sectionContent}>\r\n              <code className={styles.scriptCode}>{getScriptCode()}</code>{\" \"}\r\n            </div>\r\n          </div>\r\n          <div className={styles.projectPageSection}>\r\n            <div className={styles.sectionHeader}>\r\n              <h2>Widget settings</h2>\r\n              <Button\r\n                disabled={isLoading}\r\n                text={\"Discard\"}\r\n                icon={\"icon_close\"}\r\n                onClick={resetWidgetSettings}\r\n              />\r\n              <Button\r\n                disabled={isLoading}\r\n                text={\"Save\"}\r\n                icon={\"icon_save\"}\r\n                onClick={onSaveWidgetSettingsClick}\r\n              />\r\n            </div>\r\n            <div className={styles.sectionContent}>\r\n              <div className={styles.widgetStyleControls}>\r\n                {\" \"}\r\n                <label className={styles.color}>\r\n                  Header color\r\n                  <input\r\n                    type=\"color\"\r\n                    value={widgetHeaderColor}\r\n                    onChange={onInputChange(\"widgetHeaderColor\")}\r\n                  />\r\n                </label>\r\n                <label className={styles.color}>\r\n                  Background color\r\n                  <input\r\n                    type=\"color\"\r\n                    value={widgetBackgroundColor}\r\n                    onChange={onInputChange(\"widgetBackgroundColor\")}\r\n                  />\r\n                </label>\r\n                <label className={styles.color}>\r\n                  Border color\r\n                  <input\r\n                    type=\"color\"\r\n                    value={widgetBorderColor}\r\n                    onChange={onInputChange(\"widgetBorderColor\")}\r\n                  />\r\n                </label>\r\n                <label className={styles.range}>\r\n                  Border width, px\r\n                  <input\r\n                    type=\"range\"\r\n                    min={0}\r\n                    max={6}\r\n                    value={widgetBorderWidth}\r\n                    onChange={onInputChange(\"widgetBorderWidth\")}\r\n                  />\r\n                </label>\r\n                <label className={styles.range}>\r\n                  Border radius, px\r\n                  <input\r\n                    type=\"range\"\r\n                    min={0}\r\n                    max={30}\r\n                    value={widgetBorderRadius}\r\n                    onChange={onInputChange(\"widgetBorderRadius\")}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <label className={styles.color}>\r\n                Widget source URL\r\n                <input\r\n                  type=\"url\"\r\n                  className={error === \"widgetURLError\" ? \"error\" : \"\"}\r\n                  placeholder={\"https://example.com\"}\r\n                  value={widgetURL}\r\n                  onChange={onInputChange(\"widgetURL\")}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className={styles.projectPageSection}>\r\n            <div className={styles.sectionHeader}>\r\n              <h2>Metadata</h2>\r\n              <Button\r\n                disabled={isLoading}\r\n                text={\"Discard\"}\r\n                icon={\"icon_close\"}\r\n                onClick={resetMetadata}\r\n              />\r\n              <Button\r\n                disabled={isLoading}\r\n                text={\"Save\"}\r\n                icon={\"icon_save\"}\r\n                onClick={onSaveMetadataClick}\r\n              />\r\n            </div>\r\n            <div className={styles.sectionContent}>\r\n              <label>\r\n                Project name\r\n                <span className=\"hintText\">\r\n                  leters, numbers, dashes are allowed\r\n                </span>\r\n                <input\r\n                  type=\"text\"\r\n                  className={error === \"projectNameError\" ? \"error\" : \"\"}\r\n                  placeholder={\"project-name\"}\r\n                  value={projectName}\r\n                  onChange={onInputChange(\"projectName\")}\r\n                />\r\n              </label>\r\n              <label>\r\n                Project URL for the widget usage\r\n                <input\r\n                  type=\"url\"\r\n                  className={error === \"projectURLError\" ? \"error\" : \"\"}\r\n                  placeholder={\"https://example.com\"}\r\n                  value={projectURL}\r\n                  onChange={onInputChange(\"projectURL\")}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.knowledgeBase}>\r\n          <div className={styles.projectPageSection}>\r\n            <div className={styles.sectionHeader}>\r\n              <h2>Knowledge base</h2>\r\n              <div className={styles.buttonsWrapper}>\r\n                <Button\r\n                  disabled={isLoading || !filesList.length}\r\n                  text={\"Ingest\"}\r\n                  icon={\"icon_edit\"}\r\n                  onClick={onIngestKBClick}\r\n                />\r\n                <Button\r\n                  disabled={\r\n                    isLoading || !currentProject?.projectIngestedData?.length\r\n                  }\r\n                  text={\"Delete\"}\r\n                  icon={\"icon_delete\"}\r\n                  onClick={onDeleteKBClick}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.sectionContent}>\r\n              <details open={!!currentProject?.projectIngestedData?.length}>\r\n                <summary>List of knowledgebase files</summary>\r\n                <div className={styles.knowledgeBaseList}>\r\n                  <ul className={styles.filesList}>\r\n                    {currentProject?.projectIngestedData?.map(\r\n                      ({ fileName, size }) => (\r\n                        <li key={fileName}>\r\n                          <span>{fileName}</span>\r\n                          <span>\r\n                            {Number.parseFloat(size || \"\").toFixed(2)} kb\r\n                          </span>\r\n                        </li>\r\n                      )\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </details>\r\n              <details open={!currentProject?.projectIngestedData?.length}>\r\n                <summary>Ingest files</summary>\r\n\r\n                <div\r\n                  className={styles.knowledgeBaseUploadForm}\r\n                  onDragOver={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                  }}\r\n                >\r\n                  {filesList?.length ? (\r\n                    <ul className={styles.filesList}>\r\n                      {Array.from(filesList).map(({ name, size }) => {\r\n                        return (\r\n                          <li key={name + size}>\r\n                            <span>{name}</span>\r\n                            <span>{size}</span>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  ) : (\r\n                    <div className={styles.dragndropMessage}>\r\n                      Drag'n'drop txt files or click the area for dialog window.\r\n                      Files are adding up to the ones that are already in\r\n                      knowledge base.\r\n                    </div>\r\n                  )}\r\n\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".txt\"\r\n                    multiple={true}\r\n                    onDragEnd={handleFilesAdd}\r\n                    onChange={handleFilesAdd}\r\n                  />\r\n                </div>\r\n              </details>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isLoading ? <Spinner text={spinnerMessage} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectPage);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { ProjectsList } from \"./ProjectsList\";\r\nimport { ProjectPage } from \"./ProjectPage\";\r\n\r\nimport styles from './Projects.module.scss';\r\n\r\nconst Projects: React.FC = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className={styles.projects}>\r\n      {\" \"}\r\n      <Switch>\r\n        <Route exact path={`${url}`} component={ProjectsList} />\r\n        <Route path={`${url}/:id`} component={ProjectPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","import styles from \"./Settings.module.scss\";\r\ntype Props = {};\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Settings.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import styles from \"./Stats.module.scss\";\r\ntype Props = {};\r\n\r\nconst Stats: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Stats.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { lazy, Suspense } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { Spinner } from \"@/components\";\r\n\r\nimport styles from \"@/scss/main.module.scss\";\r\n\r\nconst Projects = lazy(\r\n  () => import(\"@/views/Cabinet/Projects\" /* webpackChunkName: \"Projects\" */)\r\n);\r\nconst Billing = lazy(\r\n  () => import(\"@/views/Cabinet/Billing\" /* webpackChunkName: \"Billing\" */)\r\n);\r\nconst Settings = lazy(\r\n  () => import(\"@/views/Cabinet/Settings\" /* webpackChunkName: \"Settings\" */)\r\n);\r\nconst Stats = lazy(\r\n  () => import(\"@/views/Cabinet/Stats\" /* webpackChunkName: \"Stats\" */)\r\n);\r\n\r\ntype Props = {};\r\n\r\nconst Cabinet: React.FC<Props> = () => {\r\n  const { url } = useRouteMatch();\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className={'page'}>\r\n      <div className={'pageContent'}>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            {/** Removing trailing slashes from the URL*/}\r\n            <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n\r\n            <Route path={`${url}/projects`} component={Projects} />\r\n            <Route path={`${url}/stats`} component={Stats} />\r\n            <Route path={`${url}/billing`} component={Billing} />\r\n            <Route path={`${url}/settings`} component={Settings} />\r\n            <Route\r\n              exact\r\n              path={`${url}/`}\r\n              component={() => <Redirect to={`${url}/projects`} />}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cabinet;\r\n"],"names":["_jsx","children","ProjectTile","_ref","_id","projectName","projectCreationDate","projectURL","onDelete","url","useRouteMatch","_jsxs","className","styles","Link","to","concat","Button","icon","text","onClick","memo","observer","userProjects","store","_store$interface","setModalType","setCurrentProjectId","isLoading","onDeleteProjectClick","projectId","length","map","project","_objectSpread","Spinner","_currentProject$proje","_currentProject$proje2","_currentProject$proje3","_currentProject$proje4","useParams","id","_useState","useState","_useState2","_slicedToArray","currentProject","setCurrentProject","_useState3","_useState4","setProjectName","_useState5","_useState6","setProjectURL","_useState7","_useState8","widgetURL","setWidgetURL","_useState9","_useState10","widgetHeaderColor","setWidgetHeaderColor","_useState11","_useState12","widgetBackgroundColor","setWidgetBackgroundColor","_useState13","_useState14","widgetBorderRadius","setWidgetBorderRadius","_useState15","_useState16","widgetBorderColor","setWidgetBorderColor","_useState17","_useState18","widgetBorderWidth","setWidgetBorderWidth","_useState19","_useState20","filesList","setFilesList","_useState21","_useState22","spinnerMessage","setSpinnerMessage","_useState23","_useState24","error","setError","_store$user","userId","getProjectById","saveProjectSettings","ingestKnowledgeBase","pushNotification","setIsLoading","useEffect","_project$widgetSettin","widgetSettings","getScriptCode","onInputChange","type","e","console","log","target","value","onSaveMetadataClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","updatedProject","wrap","_context","prev","next","validateProjectName","validateURL","abrupt","stop","apply","arguments","onSaveWidgetSettingsClick","_ref2","_callee2","_context2","handleFilesAdd","preventDefault","stopPropagation","files","dataTransfer","newFilesList","_toConsumableArray","i","push","message","onIngestKBClick","_ref3","_callee3","formData","_context3","FormData","forEach","file","append","style","display","width","disabled","window","navigator","clipboard","writeText","then","onChange","min","max","placeholder","projectIngestedData","open","_ref4","fileName","size","Number","parseFloat","toFixed","onDragOver","Array","from","_ref5","name","accept","multiple","onDragEnd","Switch","Route","exact","path","component","ProjectsList","ProjectPage","Projects","lazy","Billing","Settings","Stats","pathname","useLocation","Suspense","fallback","Redirect","slice"],"sourceRoot":""}
{"version":3,"file":"static/js/Cabinet.3adc69b7.chunk.js","mappings":"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","sources":["views/Cabinet/Billing/Billing.tsx","webpack://content_insight_frontend/./src/components/ProjectTile/ProjectTile.module.scss?4035","components/ProjectTile/ProjectTile.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectsList/ProjectsList.module.scss?29ea","views/Cabinet/Projects/ProjectsList/ProjectsList.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectPage/ProjectPage.module.scss?bdf2","webpack://content_insight_frontend/./src/components/DemoWidget/DemoWidget.module.scss?51f3","components/DemoWidget/DemoWidget.tsx","views/Cabinet/Projects/ProjectPage/ProjectPage.tsx","views/Cabinet/Projects/Projects.module.scss","views/Cabinet/Projects/Projects.tsx","views/Cabinet/Settings/Settings.tsx","views/Cabinet/Stats/Stats.tsx","views/Cabinet/Cabinet.tsx"],"sourcesContent":["import styles from \"./Billing.module.scss\";\r\ntype Props = {};\r\n\r\nconst Billing: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Billing.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Billing;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectTile\":\"ProjectTile_projectTile__quj6f\",\"projectDetails\":\"ProjectTile_projectDetails__grJt9\",\"projectName\":\"ProjectTile_projectName__zn2aT\",\"projectURL\":\"ProjectTile_projectURL__QeNpF\",\"projectControls\":\"ProjectTile_projectControls__P+4YV\"};","import { UserProjectType } from \"@/MST/user\";\r\nimport { memo } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport Button from \"../elements/Button\";\r\nimport styles from \"./ProjectTile.module.scss\";\r\n\r\ntype Props = UserProjectType & { onDelete: (projectId: string) =>void };\r\n\r\nconst ProjectTile: React.FC<Props> = ({\r\n  _id,\r\n  projectName,\r\n  projectCreationDate,\r\n  projectURL,\r\n  onDelete,\r\n}) => {\r\n  const { url } = useRouteMatch();\r\n\r\n  const onDeleteClick = () => {\r\n    onDelete(_id || '');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectTile}>\r\n      <div className={styles.projectDetails}>\r\n        {\" \"}\r\n        <Link to={`${url}/${_id}`}>\r\n          <div className={styles.projectName}>{projectName}</div>\r\n          <div className={styles.projectURL}>URL: {projectURL}</div>\r\n          <div className={styles.projectURL}>\r\n            Created: {projectCreationDate}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectControls}>\r\n        <Button icon=\"icon_delete\" text={\"Delete project\"} onClick={onDeleteClick}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProjectTile);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectsContainer\":\"ProjectsList_projectsContainer__q0Cj8\",\"addProjectButton\":\"ProjectsList_addProjectButton__pAUz0\",\"projectTilesWrapper\":\"ProjectsList_projectTilesWrapper__BioBg\"};","import { observer } from \"mobx-react-lite\";\r\nimport { Button, Spinner} from \"@/components\";\r\nimport { ProjectTile } from \"@/components/ProjectTile\";\r\nimport store from \"@/MST/store\";\r\n\r\nimport styles from \"./ProjectsList.module.scss\";\r\n\r\nconst ProjectsList: React.FC = () => {\r\n  \r\n  const { userProjects } = store.user;\r\n  const { setModalType, setCurrentProjectId, isLoading } = store.interface;\r\n\r\n  const onCreateProjectClick = () => {\r\n    setModalType('projectCreate');\r\n  };\r\n\r\n  const onDeleteProjectClick = (projectId: string) => {\r\n    setCurrentProjectId(projectId);\r\n    setModalType('projectDelete');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.projectsContainer}>\r\n      <Button\r\n        icon=\"icon_plus\"\r\n        text={\"Add project\"}\r\n        className={styles.addProjectButton}\r\n        onClick={onCreateProjectClick}\r\n      />\r\n      <div className={styles.projectTilesWrapper}>\r\n        {userProjects.length\r\n          ? userProjects.map((project) => <ProjectTile key={project._id} {...project} onDelete={onDeleteProjectClick} />)\r\n          : \"You dont have any projects yet.\"}\r\n      </div>\r\n      \r\n      {isLoading ? <Spinner /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectsList);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectPageWrapper\":\"ProjectPage_projectPageWrapper__DfPKp\",\"projectPage\":\"ProjectPage_projectPage__gPfMH\",\"projectHeader\":\"ProjectPage_projectHeader__Npbm9\",\"projectPageSection\":\"ProjectPage_projectPageSection__BaH67\",\"sectionHeader\":\"ProjectPage_sectionHeader__8KMsL\",\"sectionContent\":\"ProjectPage_sectionContent__WjGjw\",\"widgetSettings\":\"ProjectPage_widgetSettings__huTlX\",\"widgetControls\":\"ProjectPage_widgetControls__K+gdZ\",\"color\":\"ProjectPage_color__rsOVr\",\"sourceURL\":\"ProjectPage_sourceURL__7Ep6N\",\"range\":\"ProjectPage_range__ZyIDn\",\"demoWidgetWrapper\":\"ProjectPage_demoWidgetWrapper__FsfhT\",\"knowledgeBase\":\"ProjectPage_knowledgeBase__pVuHl\",\"knowledgeBaseList\":\"ProjectPage_knowledgeBaseList__HxEv1\",\"knowledgeBaseUploadForm\":\"ProjectPage_knowledgeBaseUploadForm__k82B2\",\"scriptCode\":\"ProjectPage_scriptCode__YCQon\",\"buttonsWrapper\":\"ProjectPage_buttonsWrapper__uchQ+\",\"dragndropMessage\":\"ProjectPage_dragndropMessage__cuePI\",\"filesList\":\"ProjectPage_filesList__qlSQN\"};","// extracted by mini-css-extract-plugin\nexport default {\"content_insight_chat_popup\":\"DemoWidget_content_insight_chat_popup__-G5DE\",\"closed\":\"DemoWidget_closed__DloXd\",\"content_insight_header\":\"DemoWidget_content_insight_header__a05No\",\"content_insight_toggle_button\":\"DemoWidget_content_insight_toggle_button__5lj62\",\"content_insight_content\":\"DemoWidget_content_insight_content__3U7gs\",\"content_insight_input_wrapper\":\"DemoWidget_content_insight_input_wrapper__DZ-IK\",\"content_insight_ask_button\":\"DemoWidget_content_insight_ask_button__rAh74\"};","import styles from \"./DemoWidget.module.scss\";\r\n\r\ntype Props = {\r\n  settings: {\r\n    widgetHeaderColor: string;\r\n    widgetBackgroundColor: string;\r\n    widgetBorderRadius: string;\r\n    widgetBorderColor: string;\r\n    widgetBorderWidth: string;\r\n  };\r\n};\r\n\r\nconst DemoWidget: React.FC<Props> = ({ settings }) => {\r\n  const {\r\n    widgetHeaderColor,\r\n    widgetBackgroundColor,\r\n    widgetBorderRadius,\r\n    widgetBorderColor,\r\n    widgetBorderWidth,\r\n  } = settings;\r\n  return (\r\n    <div\r\n      className={styles.content_insight_chat_popup}\r\n      style={{\r\n        backgroundColor: widgetBackgroundColor,\r\n        borderRadius: widgetBorderRadius + \"px\",\r\n        borderColor: widgetBorderColor,\r\n        borderWidth: widgetBorderWidth + \"px\",\r\n      }}\r\n    >\r\n      <div\r\n        className={styles.content_insight_header}\r\n        style={{ backgroundColor: widgetHeaderColor }}\r\n      >\r\n        Help\r\n        <button\r\n          className={styles.content_insight_toggle_button}\r\n          title=\"open / close\"\r\n        >          _\r\n        </button>\r\n      </div>\r\n      <div className={styles.content_insight_content}>\r\n        <div className={styles.content_insight_input_wrapper}>\r\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" focusable=\"false\">\r\n            <circle cx=\"6\" cy=\"6\" r=\"5.5\" fill=\"none\" stroke=\"black\"></circle>\r\n            <path stroke=\"black\" strokeLinecap=\"round\" d=\"M15 15l-5-5\"></path>\r\n          </svg>\r\n          <input\r\n            className={styles.content_insight_question_input}\r\n            placeholder=\"How can we help?\"\r\n          />\r\n          <button className={styles.content_insight_clear_button}>\r\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" focusable=\"false\">\r\n              <path\r\n                stroke=\"black\"\r\n                strokeLinecap=\"round\"\r\n                d=\"M3 13L13 3m0 10L3 3\"\r\n              ></path>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <button\r\n          title=\"Send question request\"\r\n          className={styles.content_insight_ask_button}\r\n        >\r\n          Ask!\r\n        </button>\r\n        <div className=\"content_insight_response_block\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoWidget;\r\n","import { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Spinner } from \"@/components\";\r\n\r\nimport store from \"@/MST/store\";\r\n\r\nimport { UserProjectType } from \"@/MST/user\";\r\n\r\nimport styles from \"./ProjectPage.module.scss\";\r\nimport { validateProjectName, validateURL } from \"@/utils/validators\";\r\nimport DemoWidget from \"@/components/DemoWidget\";\r\n\r\nconst ProjectPage: React.FC = () => {\r\n  const { id: projectId }: { id: string } = useParams();\r\n  const [currentProject, setCurrentProject] = useState<UserProjectType>();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [projectURL, setProjectURL] = useState(\"\");\r\n  const [widgetHeaderColor, setWidgetHeaderColor] = useState(\"\");\r\n  const [widgetBackgroundColor, setWidgetBackgroundColor] = useState(\"\");\r\n  const [widgetBorderRadius, setWidgetBorderRadius] = useState(\"0\");\r\n  const [widgetBorderColor, setWidgetBorderColor] = useState(\"\");\r\n  const [widgetBorderWidth, setWidgetBorderWidth] = useState(\"0\");\r\n  const [filesList, setFilesList] = useState<File[]>([]);\r\n  const [spinnerMessage, setSpinnerMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    user: {\r\n      _id: userId,\r\n      getProjectById,\r\n      saveProjectSettings,\r\n      ingestKnowledgeBase,\r\n    },\r\n    interface: {\r\n      isLoading,\r\n      pushNotification,\r\n      setIsLoading,\r\n      setCurrentProjectId,\r\n      setModalType,\r\n    },\r\n  } = store;\r\n\r\n  const project = getProjectById(projectId);\r\n\r\n  useEffect(() => {\r\n    if (!project) return;\r\n    const {\r\n      projectName,\r\n      projectURL,\r\n      widgetSettings: {\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n        widgetBorderRadius,\r\n      },\r\n    } = project;\r\n\r\n    setCurrentProject(project);\r\n    setProjectName(projectName || \"\");\r\n    setProjectURL(projectURL || \"\");\r\n    setWidgetHeaderColor(widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetBorderRadius || \"\");\r\n  }, [project]);\r\n\r\n  const getScriptCode = () => {\r\n    return `   <script\r\n    id=\"content_insight_widget\"\r\n    data-userId=\"${userId}\"\r\n    data-projectId=\"${projectId}\"\r\n    src=\"https://content-insight-backend-c244a3d2147a.herokuapp.com/widget/getWidget\"\r\n    data-backendURL=\"https://content-insight-backend-c244a3d2147a.herokuapp.com\"\r\n   ></script>`;\r\n  };\r\n\r\n  const copyScriptCode = () => {\r\n    window.navigator.clipboard.writeText(getScriptCode()).then(() =>\r\n      pushNotification({\r\n        type: \"info\",\r\n        message: \"Script copied to clipboard.\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onInputChange =\r\n    (type: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      console.log(e.target.value);\r\n      switch (type) {\r\n        case \"projectName\": {\r\n          setProjectName(e.target.value);\r\n          break;\r\n        }\r\n        case \"projectURL\": {\r\n          setProjectURL(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetHeaderColor\": {\r\n          setWidgetHeaderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBackgroundColor\": {\r\n          setWidgetBackgroundColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderColor\": {\r\n          setWidgetBorderColor(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderWidth\": {\r\n          setWidgetBorderWidth(e.target.value);\r\n          break;\r\n        }\r\n        case \"widgetBorderRadius\": {\r\n          setWidgetBorderRadius(e.target.value);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const validateMetadata = () => {\r\n    if (!validateProjectName(projectName)) {\r\n      setError(\"projectNameError\");\r\n      return false;\r\n    }\r\n    if (!validateURL(projectURL)) {\r\n      setError(\"projectURLError\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSaveMetadataClick = async () => {\r\n    if (!validateMetadata()) return;\r\n    setError(\"\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      projectName,\r\n      projectURL,\r\n    };\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating project metadata...\");\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetMetadata = () => {\r\n    setProjectName(currentProject?.projectName || \"\");\r\n    setProjectURL(currentProject?.projectURL || \"\");\r\n  };\r\n\r\n  const onSaveWidgetSettingsClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Updating widget settings...\");\r\n    const updatedProject = {\r\n      ...currentProject,\r\n      widgetSettings: {\r\n        widgetHeaderColor,\r\n        widgetBackgroundColor,\r\n        widgetBorderRadius,\r\n        widgetBorderColor,\r\n        widgetBorderWidth,\r\n      },\r\n    };\r\n    await saveProjectSettings(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const resetWidgetSettings = () => {\r\n    if (!currentProject) return;\r\n    const { widgetSettings } = currentProject;\r\n    setWidgetHeaderColor(widgetSettings?.widgetHeaderColor || \"\");\r\n    setWidgetBackgroundColor(widgetSettings?.widgetBackgroundColor || \"\");\r\n    setWidgetBorderColor(widgetSettings?.widgetBorderColor || \"\");\r\n    setWidgetBorderWidth(widgetSettings?.widgetBorderWidth || \"\");\r\n    setWidgetBorderRadius(widgetSettings?.widgetBorderRadius || \"\");\r\n  };\r\n\r\n  const handleFilesAdd = (e: any) => {\r\n    console.log(\"handleFilesAdd\");\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // defining if we added file through dialogue window - or drag'ndrop\r\n    try {\r\n      const files: FileList =\r\n        e.type === \"drop\" ? e.dataTransfer.files : e.target.files;\r\n      const newFilesList = [...filesList];\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        if (files[i].type !== \"text/plain\") continue;\r\n        newFilesList.push(files[i]);\r\n      }\r\n      setFilesList(newFilesList);\r\n    } catch (error: any) {\r\n      pushNotification({\r\n        type: \"error\",\r\n        message:\r\n          \"Error while loading files from local drive. \\n\" + error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIngestKBClick = async () => {\r\n    setIsLoading(true);\r\n    setSpinnerMessage(\"Ingesting knowledge base\");\r\n    const formData = new FormData();\r\n    filesList.forEach((file) => {\r\n      formData.append(\"dataFiles\", file);\r\n    });\r\n\r\n    formData.append(\"projectId\", currentProject?._id || \"\");\r\n    formData.append(\"projectName\", currentProject?.projectName || \"\");\r\n\r\n    await ingestKnowledgeBase(formData);\r\n    setFilesList([]);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const onDeleteKBClick = () => {\r\n    setCurrentProjectId(currentProject?._id || \"\");\r\n    setSpinnerMessage(\"Deleting knowledge base\");\r\n    setModalType(\"proejctKBDelete\");\r\n    setFilesList([]);\r\n  };\r\n\r\n  if (!currentProject) return <div>Project not found.</div>;\r\n\r\n  return (\r\n    <div className={styles.projectPageWrapper}>\r\n      <div className={styles.projectHeader}>\r\n        <h1>Project : {currentProject.projectName}</h1>{\" \"}\r\n        <Link\r\n          to={\"/cabinet/projects\"}\r\n          style={{ display: \"block\", width: \"fit-content\" }}\r\n        >\r\n          <Button icon=\"icon_arrow_left\" text={\"To projects list\"} />\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.projectPage}>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Widget settings</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Discard\"}\r\n              icon={\"icon_close\"}\r\n              onClick={resetWidgetSettings}\r\n            />\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Save\"}\r\n              icon={\"icon_save\"}\r\n              onClick={onSaveWidgetSettingsClick}\r\n            />\r\n          </div>\r\n\r\n          <div className={styles.sectionContent + \" \" + styles.widgetSettings}>\r\n            <div className={styles.widgetControls}>\r\n              {\" \"}\r\n              <label className={styles.color}>\r\n                Header color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetHeaderColor}\r\n                  onChange={onInputChange(\"widgetHeaderColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.color}>\r\n                Background color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetBackgroundColor}\r\n                  onChange={onInputChange(\"widgetBackgroundColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.color}>\r\n                Border color\r\n                <input\r\n                  type=\"color\"\r\n                  value={widgetBorderColor}\r\n                  onChange={onInputChange(\"widgetBorderColor\")}\r\n                />\r\n              </label>\r\n              <label className={styles.range}>\r\n                Border width, px\r\n                <input\r\n                  type=\"range\"\r\n                  min={0}\r\n                  max={6}\r\n                  value={widgetBorderWidth}\r\n                  onChange={onInputChange(\"widgetBorderWidth\")}\r\n                />\r\n              </label>\r\n              <label className={styles.range}>\r\n                Border radius, px\r\n                <input\r\n                  type=\"range\"\r\n                  min={0}\r\n                  max={30}\r\n                  value={widgetBorderRadius}\r\n                  onChange={onInputChange(\"widgetBorderRadius\")}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className={styles.demoWidgetWrapper}>\r\n              <DemoWidget\r\n                settings={{\r\n                  widgetHeaderColor,\r\n                  widgetBackgroundColor,\r\n                  widgetBorderRadius,\r\n                  widgetBorderColor,\r\n                  widgetBorderWidth,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Knowledge base</h2>\r\n            <div className={styles.buttonsWrapper}>\r\n              <Button\r\n                disabled={isLoading || !filesList.length}\r\n                text={\"Ingest\"}\r\n                icon={\"icon_edit\"}\r\n                onClick={onIngestKBClick}\r\n              />\r\n              <Button\r\n                disabled={\r\n                  isLoading || !currentProject?.projectIngestedData?.length\r\n                }\r\n                text={\"Delete\"}\r\n                icon={\"icon_delete\"}\r\n                onClick={onDeleteKBClick}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles.sectionContent + ' ' + styles.knowledgeBase} >\r\n            <div >\r\n              <label>List of knowledgebase files</label>\r\n              <div className={styles.knowledgeBaseList}>\r\n                <ul className={styles.filesList}>\r\n                  {currentProject?.projectIngestedData?.map(\r\n                    ({ fileName, size }) => (\r\n                      <li key={fileName}>\r\n                        <span>{fileName}</span>\r\n                        <span>\r\n                          {Number.parseFloat(size || \"\").toFixed(2)} kb\r\n                        </span>\r\n                      </li>\r\n                    )\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label>Ingest files</label>\r\n\r\n              <div\r\n                className={styles.knowledgeBaseUploadForm}\r\n                onDragOver={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                {filesList?.length ? (\r\n                  <ul className={styles.filesList}>\r\n                    {Array.from(filesList).map(({ name, size }) => {\r\n                      return (\r\n                        <li key={name + size}>\r\n                          <span>{name}</span>\r\n                          <span>{size}</span>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                ) : (\r\n                  <div className={styles.dragndropMessage}>\r\n                    Drag'n'drop txt files or click the area for dialog window.\r\n                    Files are adding up to the ones that are already in\r\n                    knowledge base.\r\n                  </div>\r\n                )}\r\n\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".txt\"\r\n                  multiple={true}\r\n                  onDragEnd={handleFilesAdd}\r\n                  onChange={handleFilesAdd}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>{\" \"}\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Metadata</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Discard\"}\r\n              icon={\"icon_close\"}\r\n              onClick={resetMetadata}\r\n            />\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Save\"}\r\n              icon={\"icon_save\"}\r\n              onClick={onSaveMetadataClick}\r\n            />\r\n          </div>\r\n          <div className={styles.sectionContent}>\r\n            <label>\r\n              Project name\r\n              <span className=\"hintText\">\r\n                leters, numbers, dashes are allowed\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                className={error === \"projectNameError\" ? \"error\" : \"\"}\r\n                placeholder={\"project-name\"}\r\n                value={projectName}\r\n                onChange={onInputChange(\"projectName\")}\r\n              />\r\n            </label>\r\n            <label>\r\n              Project URL for the widget usage\r\n              <input\r\n                type=\"url\"\r\n                className={error === \"projectURLError\" ? \"error\" : \"\"}\r\n                placeholder={\"https://example.com\"}\r\n                value={projectURL}\r\n                onChange={onInputChange(\"projectURL\")}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className={styles.projectPageSection}>\r\n          <div className={styles.sectionHeader}>\r\n            <h2>Client script</h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Copy\"}\r\n              icon={\"icon_copy\"}\r\n              onClick={copyScriptCode}\r\n            />\r\n          </div>\r\n          <div className={styles.sectionContent}>\r\n            <code className={styles.scriptCode}>{getScriptCode()}</code>{\" \"}\r\n          </div>\r\n        </div>\r\n        {isLoading ? <Spinner text={spinnerMessage} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectPage);\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { ProjectsList } from \"./ProjectsList\";\r\nimport { ProjectPage } from \"./ProjectPage\";\r\n\r\nimport styles from './Projects.module.scss';\r\n\r\nconst Projects: React.FC = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className={styles.projects}>\r\n      {\" \"}\r\n      <Switch>\r\n        <Route exact path={`${url}`} component={ProjectsList} />\r\n        <Route path={`${url}/:id`} component={ProjectPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","import styles from \"./Settings.module.scss\";\r\ntype Props = {};\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Settings.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import styles from \"./Stats.module.scss\";\r\ntype Props = {};\r\n\r\nconst Stats: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Stats.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { lazy, Suspense } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { Spinner } from \"@/components\";\r\n\r\nimport styles from \"@/scss/main.module.scss\";\r\n\r\nconst Projects = lazy(\r\n  () => import(\"@/views/Cabinet/Projects\" /* webpackChunkName: \"Projects\" */)\r\n);\r\nconst Billing = lazy(\r\n  () => import(\"@/views/Cabinet/Billing\" /* webpackChunkName: \"Billing\" */)\r\n);\r\nconst Settings = lazy(\r\n  () => import(\"@/views/Cabinet/Settings\" /* webpackChunkName: \"Settings\" */)\r\n);\r\nconst Stats = lazy(\r\n  () => import(\"@/views/Cabinet/Stats\" /* webpackChunkName: \"Stats\" */)\r\n);\r\n\r\ntype Props = {};\r\n\r\nconst Cabinet: React.FC<Props> = () => {\r\n  const { url } = useRouteMatch();\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <div className={'page'}>\r\n      <div className={'pageContent'}>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            {/** Removing trailing slashes from the URL*/}\r\n            <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\r\n\r\n            <Route path={`${url}/projects`} component={Projects} />\r\n            <Route path={`${url}/stats`} component={Stats} />\r\n            <Route path={`${url}/billing`} component={Billing} />\r\n            <Route path={`${url}/settings`} component={Settings} />\r\n            <Route\r\n              exact\r\n              path={`${url}/`}\r\n              component={() => <Redirect to={`${url}/projects`} />}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cabinet;\r\n"],"names":["_jsx","children","ProjectTile","_ref","_id","projectName","projectCreationDate","projectURL","onDelete","url","useRouteMatch","_jsxs","className","styles","Link","to","concat","Button","icon","text","onClick","memo","observer","userProjects","store","_store$interface","setModalType","setCurrentProjectId","isLoading","onDeleteProjectClick","projectId","length","map","project","_objectSpread","Spinner","settings","widgetHeaderColor","widgetBackgroundColor","widgetBorderRadius","widgetBorderColor","widgetBorderWidth","style","backgroundColor","borderRadius","borderColor","borderWidth","title","width","height","viewBox","focusable","cx","cy","r","fill","stroke","strokeLinecap","d","placeholder","_currentProject$proje","_currentProject$proje2","useParams","id","_useState","useState","_useState2","_slicedToArray","currentProject","setCurrentProject","_useState3","_useState4","setProjectName","_useState5","_useState6","setProjectURL","_useState7","_useState8","setWidgetHeaderColor","_useState9","_useState10","setWidgetBackgroundColor","_useState11","_useState12","setWidgetBorderRadius","_useState13","_useState14","setWidgetBorderColor","_useState15","_useState16","setWidgetBorderWidth","_useState17","_useState18","filesList","setFilesList","_useState19","_useState20","spinnerMessage","setSpinnerMessage","_useState21","_useState22","error","setError","_store$user","userId","getProjectById","saveProjectSettings","ingestKnowledgeBase","pushNotification","setIsLoading","useEffect","_project$widgetSettin","widgetSettings","getScriptCode","onInputChange","type","e","console","log","target","value","onSaveMetadataClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","updatedProject","wrap","_context","prev","next","validateProjectName","validateURL","abrupt","stop","apply","arguments","onSaveWidgetSettingsClick","_ref2","_callee2","_context2","handleFilesAdd","preventDefault","stopPropagation","files","dataTransfer","newFilesList","_toConsumableArray","i","push","message","onIngestKBClick","_ref3","_callee3","formData","_context3","FormData","forEach","file","append","display","disabled","onChange","min","max","DemoWidget","projectIngestedData","_ref4","fileName","size","Number","parseFloat","toFixed","onDragOver","Array","from","_ref5","name","accept","multiple","onDragEnd","window","navigator","clipboard","writeText","then","Switch","Route","exact","path","component","ProjectsList","ProjectPage","Projects","lazy","Billing","Settings","Stats","pathname","useLocation","Suspense","fallback","Redirect","slice"],"sourceRoot":""}
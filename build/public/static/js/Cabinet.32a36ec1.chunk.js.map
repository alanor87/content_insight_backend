{"version":3,"file":"static/js/Cabinet.32a36ec1.chunk.js","mappings":"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","sources":["views/Cabinet/Billing/Billing.tsx","webpack://content_insight_frontend/./src/components/ProjectTile/ProjectTile.module.scss?4035","components/ProjectTile/ProjectTile.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectsList/ProjectsList.module.scss?29ea","views/Cabinet/Projects/ProjectsList/ProjectsList.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://content_insight_frontend/./src/views/Cabinet/Projects/ProjectPage/ProjectPage.module.scss?bdf2","views/Cabinet/Projects/ProjectPage/ProjectPage.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Projects/Projects.module.scss?71d6","views/Cabinet/Projects/Projects.tsx","views/Cabinet/Settings/Settings.tsx","views/Cabinet/Stats/Stats.tsx","webpack://content_insight_frontend/./src/views/Cabinet/Cabinet.module.scss?7108","views/Cabinet/Cabinet.tsx"],"sourcesContent":["import styles from \"./Billing.module.scss\";\r\ntype Props = {};\r\n\r\nconst Billing: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Billing.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Billing;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectTile\":\"ProjectTile_projectTile__quj6f\",\"projectName\":\"ProjectTile_projectName__zn2aT\",\"projectURL\":\"ProjectTile_projectURL__QeNpF\"};","import { UserProjectType } from \"@/types/common\";\r\nimport { memo } from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport styles from \"./ProjectTile.module.scss\";\r\n\r\nconst ProjectTile: React.FC<Partial<UserProjectType>> = ({\r\n  _id,\r\n  projectName,\r\n  projectCreationDate,\r\n  projectURL,\r\n}) => {\r\n\r\n  const { url } = useRouteMatch();\r\n  console.log('ProjectTile render')\r\n  return (\r\n    <Link to={`${url}/${_id}`}>\r\n      {\" \"}\r\n      <div className={styles.projectTile}>\r\n        <div className={styles.projectName}>{projectName}</div>\r\n        <div className={styles.projectURL}>URL: {projectURL}</div>\r\n        <div className={styles.projectURL}>Created: {projectCreationDate}</div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default memo(ProjectTile);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projectTilesWrapper\":\"ProjectsList_projectTilesWrapper__BioBg\"};","import { useRef } from \"react\";\r\nimport { Button, CreateProjectForm } from \"@/components\";\r\nimport store from \"@/MST/store\";\r\nimport { UserProjectType } from \"@/types/common\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { ProjectTile } from \"@/components/ProjectTile\";\r\n\r\nimport styles from \"./ProjectsList.module.scss\";\r\n\r\nconst ProjectsList: React.FC = () => {\r\n  console.log('ProjectsList render')\r\n  const createProjectModalRef = useRef<HTMLDialogElement>(null);\r\n  const { userProjects, createProject } = store.user;\r\n\r\n  const onCreateProjectClick = () => {\r\n    createProjectModalRef.current!.showModal();\r\n  };\r\n\r\n  const onCloseClick = () => {\r\n    createProjectModalRef.current!.close();\r\n  };\r\n\r\n  const onCreateClick = (projectData: Partial<UserProjectType>) => {\r\n    createProject(projectData);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.projectsContainer}>\r\n      <Button\r\n        icon=\"icon_plus\"\r\n        text={\"Add project\"}\r\n        onClick={onCreateProjectClick}\r\n      />\r\n      <div className={styles.projectTilesWrapper}>\r\n        {userProjects.length\r\n          ? userProjects.map((project) => <ProjectTile key={project._id} {...project} />)\r\n          : \"You dont have any projects yet.\"}\r\n      </div>\r\n\r\n      <dialog ref={createProjectModalRef}>\r\n        <CreateProjectForm\r\n          onCreateClick={onCreateClick}\r\n          onCloseClick={onCloseClick}\r\n        />\r\n      </dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectsList);\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","// extracted by mini-css-extract-plugin\nexport default {\"projectPage\":\"ProjectPage_projectPage__gPfMH\",\"headerWrapper\":\"ProjectPage_headerWrapper__qmX26\",\"knowledgeBaseUploadForm\":\"ProjectPage_knowledgeBaseUploadForm__k82B2\",\"dragndropMessage\":\"ProjectPage_dragndropMessage__cuePI\",\"filesList\":\"ProjectPage_filesList__qlSQN\"};","import { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport store from \"@/MST/store\";\r\n\r\nimport { UserProjectType } from \"@/types/common\";\r\nimport styles from \"./ProjectPage.module.scss\";\r\nimport { Button } from \"@/components\";\r\n\r\nconst ProjectPage: React.FC = () => {\r\n  const { id }: { id: string } = useParams();\r\n  const [currentProject, setCurrentProject] =\r\n    useState<UserProjectType | null>();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [projectURL, setProjectURL] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [filesList, setFilesList] = useState<File[]>([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { getProjectById, saveProjectMetadata, ingestKnowledgeBase } =\r\n    store.user;\r\n  const { pushNotification } = store.interface;\r\n\r\n  useEffect(() => {\r\n    const project = getProjectById(id);\r\n    if (!project) return;\r\n    setCurrentProject(project);\r\n    setProjectName(project.projectName);\r\n    setProjectURL(project.projectURL);\r\n  }, []);\r\n\r\n  const onInputChange =\r\n    (type: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      switch (type) {\r\n        case \"projectName\": {\r\n          setProjectName(e.target.value);\r\n          break;\r\n        }\r\n        case \"projectURL\": {\r\n          setProjectURL(e.target.value);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n  const validateMetadata = () => {\r\n    if (!projectName) {\r\n      setError(\"projectNameError\");\r\n      return false;\r\n    }\r\n    if (!projectURL || !projectURL.match(/^([A-Za-z0-9_]+\\.)+[A-Za-z0-9_]+$/)) {\r\n      setError(\"projectURLError\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSaveMetadataClick = async () => {\r\n    if (!validateMetadata()) return;\r\n    setError(\"\");\r\n    const updatedProject = { ...currentProject, projectName, projectURL };\r\n    setIsLoading(true);\r\n    await saveProjectMetadata(updatedProject);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleFilesAdd = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // defining if we added file through dialogue window - or drag'ndrop\r\n    try {\r\n      const files: FileList =\r\n        e.type === \"drop\" ? e.dataTransfer.files : e.target.files;\r\n      const newFilesList = [...filesList];\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        console.log(files[i]);\r\n        if (files[i].type !== \"text/plain\") continue;\r\n        newFilesList.push(files[i]);\r\n      }\r\n      setFilesList(newFilesList);\r\n    } catch (error: any) {\r\n      pushNotification({\r\n        type: \"error\",\r\n        message:\r\n          \"Error while loading files from local drive. \\n\" + error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIngestClick = async () => {\r\n    if (!filesList.length) return;\r\n    setIsLoading(true);\r\n    const formData = new FormData();\r\n    filesList.forEach((file) => {\r\n      formData.append(\"dataFiles\", file);\r\n    });\r\n    formData.append(\"projectId\", id);\r\n    await ingestKnowledgeBase(formData);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return currentProject ? (\r\n    <>\r\n      <Button icon=\"icon_arrow_left\">\r\n        <Link to={\"/cabinet/projects\"}>To projects list</Link>\r\n      </Button>\r\n\r\n      <div className={styles.projectPage}>\r\n        <div>\r\n          <div className={styles.headerWrapper}>\r\n            <h2>Project metadata </h2>\r\n            <Button\r\n              disabled={isLoading}\r\n              text={\"Save metadata\"}\r\n              onClick={onSaveMetadataClick}\r\n            />\r\n          </div>\r\n\r\n          <label>\r\n            Project name\r\n            <input\r\n              type=\"text\"\r\n              className={error === \"projectNameError\" ? \"error\" : \"\"}\r\n              value={projectName}\r\n              onChange={onInputChange(\"projectName\")}\r\n            />\r\n          </label>\r\n          <label>\r\n            Project URL for the widget usage\r\n            <input\r\n              type=\"url\"\r\n              className={error === \"projectURLError\" ? \"error\" : \"\"}\r\n              value={projectURL}\r\n              onChange={onInputChange(\"projectURL\")}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <div className={styles.headerWrapper}>\r\n            <h2>Project knowledge base</h2>\r\n            <Button\r\n              disabled={isLoading || !filesList.length}\r\n              text={\"Ingest knowledge base\"}\r\n              onClick={onIngestClick}\r\n            />\r\n          </div>\r\n\r\n          <label>\r\n            List of knowledgebase files\r\n            <div\r\n              className={styles.knowledgeBaseUploadForm}\r\n              onDragOver={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n              }}\r\n              onDragEnd={handleFilesAdd}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                accept=\".txt\"\r\n                multiple={true}\r\n                onChange={handleFilesAdd}\r\n              />\r\n              {filesList?.length ? (\r\n                <ul className={styles.filesList}>\r\n                  {Array.from(filesList).map(({ name, size }) => {\r\n                    return (\r\n                      <li key={name + size}>\r\n                        <span>{name}</span>\r\n                        <span>{size}</span>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                <div className={styles.dragndropMessage}>\r\n                  Drag'n'drop txt files or click the area for dialog window.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <div>Project not found.</div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectPage);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"projects\":\"Projects_projects__BGRec\"};","import { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { ProjectsList } from \"./ProjectsList\";\r\nimport { ProjectPage } from \"./ProjectPage\";\r\n\r\nimport styles from './Projects.module.scss';\r\n\r\nconst Projects: React.FC = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className={styles.projects}>\r\n      {\" \"}\r\n      <Switch>\r\n        <Route exact path={`${url}`} component={ProjectsList} />\r\n        <Route path={`${url}/:id`} component={ProjectPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","import styles from \"./Settings.module.scss\";\r\ntype Props = {};\r\n\r\nconst Settings: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Settings.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import styles from \"./Stats.module.scss\";\r\ntype Props = {};\r\n\r\nconst Stats: React.FC<Props> = () => {\r\n  return (\r\n    <div>\r\n      Stats.\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cabinet\":\"Cabinet_cabinet__ohff-\",\"cabinetPageContent\":\"Cabinet_cabinetPageContent__xyzny\"};","import { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, useRouteMatch, Redirect } from \"react-router-dom\";\r\nimport store from \"@/MST/store\";\r\nimport { SideMenu, Spinner } from \"@/components\";\r\n\r\nimport styles from \"./Cabinet.module.scss\";\r\n\r\nconst Projects = lazy(\r\n  () => import(\"@/views/Cabinet/Projects\" /* webpackChunkName: \"Projects\" */)\r\n);\r\nconst Billing = lazy(\r\n  () => import(\"@/views/Cabinet/Billing\" /* webpackChunkName: \"Billing\" */)\r\n);\r\nconst Settings = lazy(\r\n  () => import(\"@/views/Cabinet/Settings\" /* webpackChunkName: \"Settings\" */)\r\n);\r\nconst Stats = lazy(\r\n  () => import(\"@/views/Cabinet/Stats\" /* webpackChunkName: \"Stats\" */)\r\n);\r\n\r\ntype Props = {};\r\n\r\nconst Cabinet: React.FC<Props> = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div className={styles.cabinet}>\r\n      <SideMenu />\r\n      <div className={styles.cabinetPageContent}>\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <Route path={`${url}/projects`} component={Projects} />\r\n            <Route path={`${url}/stats`} component={Stats} />\r\n            <Route path={`${url}/billing`} component={Billing} />\r\n            <Route path={`${url}/settings`} component={Settings} />\r\n            <Route\r\n              exact\r\n              path={`${url}/*`}\r\n              component={() => <Redirect to={`${url}/projects`} />}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cabinet;\r\n"],"names":["_jsx","children","ProjectTile","_ref","_id","projectName","projectCreationDate","projectURL","url","useRouteMatch","console","log","_jsxs","Link","to","concat","className","styles","memo","observer","createProjectModalRef","useRef","_store$user","store","userProjects","createProject","Button","icon","text","onClick","current","showModal","length","map","project","_objectSpread","ref","CreateProjectForm","onCreateClick","projectData","onCloseClick","close","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","id","useParams","_useState","useState","_useState2","_slicedToArray","currentProject","setCurrentProject","_useState3","_useState4","setProjectName","_useState5","_useState6","setProjectURL","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","filesList","setFilesList","_useState11","_useState12","setError","getProjectById","saveProjectMetadata","ingestKnowledgeBase","pushNotification","useEffect","onInputChange","type","e","target","onSaveMetadataClick","_regeneratorRuntime","mark","_callee","updatedProject","wrap","_context","prev","next","match","abrupt","stop","handleFilesAdd","preventDefault","stopPropagation","files","dataTransfer","newFilesList","_toConsumableArray","i","push","message","onIngestClick","_ref2","_callee2","formData","_context2","FormData","forEach","file","append","_Fragment","disabled","onChange","onDragOver","onDragEnd","accept","multiple","Array","from","_ref3","name","size","Switch","Route","exact","path","component","ProjectsList","ProjectPage","Projects","lazy","Billing","Settings","Stats","SideMenu","Suspense","fallback","Spinner","Redirect"],"sourceRoot":""}